{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\index.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nconst app = require(\"./app\");\n// import app from \"./app\"\n\nconst main = () => {\n  app.listen(app.get(\"port\"));\n  console.log(`Server on Port  ${app.get(\"port\")}`);\n};\nmain();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhcHAiLCJyZXF1aXJlIiwibWFpbiIsImxpc3RlbiIsImdldCIsImNvbnNvbGUiLCJsb2ciXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xccGF0cmlcXE9uZURyaXZlXFxEb2N1bWVudG9zXFxHaXRIdWJcXFBvcnRhZm9saW8tdGl0dWxvXFxBUEkgKyBCQkREXFxBUEkgcmVjZXRhc1xcc3JjXFwiLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGFwcCA9IHJlcXVpcmUoXCIuL2FwcFwiKTtcclxuLy8gaW1wb3J0IGFwcCBmcm9tIFwiLi9hcHBcIlxyXG5cclxuXHJcbmNvbnN0IG1haW49KCk9PntcclxuICAgIGFwcC5saXN0ZW4oYXBwLmdldChcInBvcnRcIikpO1xyXG4gICAgY29uc29sZS5sb2coYFNlcnZlciBvbiBQb3J0ICAke2FwcC5nZXQoXCJwb3J0XCIpfWApXHJcbn07XHJcblxyXG5tYWluKCk7Il0sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLE9BQU8sQ0FBQztBQUM1Qjs7QUFHQSxNQUFNQyxJQUFJLEdBQUNBLENBQUEsS0FBSTtFQUNYRixHQUFHLENBQUNHLE1BQU0sQ0FBQ0gsR0FBRyxDQUFDSSxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7RUFDM0JDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFFLG1CQUFrQk4sR0FBRyxDQUFDSSxHQUFHLENBQUMsTUFBTSxDQUFFLEVBQUMsQ0FBQztBQUNyRCxDQUFDO0FBRURGLElBQUksQ0FBQyxDQUFDIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["app","require","main","listen","get","console","log"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\","sources":["index.js"],"sourcesContent":["const app = require(\"./app\");\r\n// import app from \"./app\"\r\n\r\n\r\nconst main=()=>{\r\n    app.listen(app.get(\"port\"));\r\n    console.log(`Server on Port  ${app.get(\"port\")}`)\r\n};\r\n\r\nmain();"],"mappings":";;AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC5B;;AAGA,MAAMC,IAAI,GAACA,CAAA,KAAI;EACXF,GAAG,CAACG,MAAM,CAACH,GAAG,CAACI,GAAG,CAAC,MAAM,CAAC,CAAC;EAC3BC,OAAO,CAACC,GAAG,CAAE,mBAAkBN,GAAG,CAACI,GAAG,CAAC,MAAM,CAAE,EAAC,CAAC;AACrD,CAAC;AAEDF,IAAI,CAAC,CAAC","ignoreList":[]}},"mtime":1713199713850},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\app.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nvar _language = _interopRequireDefault(require(\"./routes/language.routes\"));\nvar _express = _interopRequireDefault(require(\"express\"));\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n// routes - rutas\n\nconst app = (0, _express.default)(); //ejecu express\nconst cors = require('cors');\n// settings\napp.set(\"port\", 3000);\n// middleware\napp.use((0, _morgan.default)(\"dev\"));\napp.use(cors(\n  // {origin: ['http://localhost:4200', 'http://localhost:4000']}\n));\napp.use(_express.default.json());\n\n// routes\n// app.use(\"/listado\", LanguageRoutes)\napp.use(\"/\", _language.default);\n// app.use(\"/api/usuarios\")\n\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfbGFuZ3VhZ2UiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9leHByZXNzIiwiX21vcmdhbiIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiYXBwIiwiZXhwcmVzcyIsImNvcnMiLCJzZXQiLCJ1c2UiLCJtb3JnYW4iLCJqc29uIiwiTGFuZ3VhZ2VSb3V0ZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHBhdHJpXFxPbmVEcml2ZVxcRG9jdW1lbnRvc1xcR2l0SHViXFxQb3J0YWZvbGlvLXRpdHVsb1xcQVBJICsgQkJERFxcQVBJIHJlY2V0YXNcXHNyY1xcIiwic291cmNlcyI6WyJhcHAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcm91dGVzIC0gcnV0YXNcclxuaW1wb3J0IExhbmd1YWdlUm91dGVzIGZyb20gXCIuL3JvdXRlcy9sYW5ndWFnZS5yb3V0ZXNcIlxyXG5pbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xyXG5pbXBvcnQgbW9yZ2FuIGZyb20gXCJtb3JnYW5cIjtcclxuY29uc3QgYXBwPWV4cHJlc3MoKTsgLy9lamVjdSBleHByZXNzXHJcbmNvbnN0IGNvcnMgPSByZXF1aXJlKCdjb3JzJylcclxuLy8gc2V0dGluZ3NcclxuYXBwLnNldChcInBvcnRcIiwgMzAwMCk7XHJcbi8vIG1pZGRsZXdhcmVcclxuYXBwLnVzZShtb3JnYW4oXCJkZXZcIikpO1xyXG5hcHAudXNlKGNvcnMoXHJcbiAgICAvLyB7b3JpZ2luOiBbJ2h0dHA6Ly9sb2NhbGhvc3Q6NDIwMCcsICdodHRwOi8vbG9jYWxob3N0OjQwMDAnXX1cclxuKSk7XHJcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xyXG5cclxuLy8gcm91dGVzXHJcbi8vIGFwcC51c2UoXCIvbGlzdGFkb1wiLCBMYW5ndWFnZVJvdXRlcylcclxuYXBwLnVzZShcIi9cIixMYW5ndWFnZVJvdXRlcylcclxuLy8gYXBwLnVzZShcIi9hcGkvdXN1YXJpb3NcIilcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gYXBwOyJdLCJtYXBwaW5ncyI6Ijs7QUFDQSxJQUFBQSxTQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxRQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRSxPQUFBLEdBQUFILHNCQUFBLENBQUFDLE9BQUE7QUFBNEIsU0FBQUQsdUJBQUFJLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxLQUFBRSxPQUFBLEVBQUFGLEdBQUE7QUFINUI7O0FBSUEsTUFBTUcsR0FBRyxHQUFDLElBQUFDLGdCQUFPLEVBQUMsQ0FBQyxDQUFDLENBQUM7QUFDckIsTUFBTUMsSUFBSSxHQUFHUixPQUFPLENBQUMsTUFBTSxDQUFDO0FBQzVCO0FBQ0FNLEdBQUcsQ0FBQ0csR0FBRyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUM7QUFDckI7QUFDQUgsR0FBRyxDQUFDSSxHQUFHLENBQUMsSUFBQUMsZUFBTSxFQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3RCTCxHQUFHLENBQUNJLEdBQUcsQ0FBQ0YsSUFBSTtFQUNSO0FBQUEsQ0FDSCxDQUFDO0FBQ0ZGLEdBQUcsQ0FBQ0ksR0FBRyxDQUFDSCxnQkFBTyxDQUFDSyxJQUFJLENBQUMsQ0FBQyxDQUFDOztBQUV2QjtBQUNBO0FBQ0FOLEdBQUcsQ0FBQ0ksR0FBRyxDQUFDLEdBQUcsRUFBQ0csaUJBQWMsQ0FBQztBQUMzQjs7QUFFQUMsTUFBTSxDQUFDQyxPQUFPLEdBQUdULEdBQUciLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["_language","_interopRequireDefault","require","_express","_morgan","obj","__esModule","default","app","express","cors","set","use","morgan","json","LanguageRoutes","module","exports"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\","sources":["app.js"],"sourcesContent":["// routes - rutas\r\nimport LanguageRoutes from \"./routes/language.routes\"\r\nimport express from \"express\";\r\nimport morgan from \"morgan\";\r\nconst app=express(); //ejecu express\r\nconst cors = require('cors')\r\n// settings\r\napp.set(\"port\", 3000);\r\n// middleware\r\napp.use(morgan(\"dev\"));\r\napp.use(cors(\r\n    // {origin: ['http://localhost:4200', 'http://localhost:4000']}\r\n));\r\napp.use(express.json());\r\n\r\n// routes\r\n// app.use(\"/listado\", LanguageRoutes)\r\napp.use(\"/\",LanguageRoutes)\r\n// app.use(\"/api/usuarios\")\r\n\r\nmodule.exports = app;"],"mappings":";;AACA,IAAAA,SAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,QAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,OAAA,GAAAH,sBAAA,CAAAC,OAAA;AAA4B,SAAAD,uBAAAI,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAH5B;;AAIA,MAAMG,GAAG,GAAC,IAAAC,gBAAO,EAAC,CAAC,CAAC,CAAC;AACrB,MAAMC,IAAI,GAAGR,OAAO,CAAC,MAAM,CAAC;AAC5B;AACAM,GAAG,CAACG,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC;AACrB;AACAH,GAAG,CAACI,GAAG,CAAC,IAAAC,eAAM,EAAC,KAAK,CAAC,CAAC;AACtBL,GAAG,CAACI,GAAG,CAACF,IAAI;EACR;AAAA,CACH,CAAC;AACFF,GAAG,CAACI,GAAG,CAACH,gBAAO,CAACK,IAAI,CAAC,CAAC,CAAC;;AAEvB;AACA;AACAN,GAAG,CAACI,GAAG,CAAC,GAAG,EAACG,iBAAc,CAAC;AAC3B;;AAEAC,MAAM,CAACC,OAAO,GAAGT,GAAG","ignoreList":[]}},"mtime":1713199704372},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\routes\\\\language.routes.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _express = require(\"express\");\nvar _recetas = require(\"../controllers/recetas.controller\");\nvar _user = require(\"../controllers/user.controller\");\n// ruta del proyecto\nconst router = (0, _express.Router)();\n// url principales | http://localhost:4000\nrouter.get(\"/\", _recetas.methods.getRecetas);\nrouter.get(\"/usuario\", _user.usermethods.getUser);\n\n// ========= RECETAS =========\n\n// METODOS GET\nrouter.get(\"/receta/:id\", _recetas.methods.getReceta); // http://localhost:4000/receta/numero\nrouter.get(\"/recetas-chile\", _recetas.methods.getRecetaCL); // http://localhost:4000/recetas-chile\nrouter.get(\"/recetas-usa\", _recetas.methods.getRecetaUSA); // http://localhost:4000/recetas-usa\nrouter.get(\"/recetas-gb\", _recetas.methods.getRecetaGB); // http://localhost:4000/recetas-gb\nrouter.get(\"/recetas-canada\", _recetas.methods.getRecetaCA); // http://localhost:4000/recetas-canada\nrouter.get(\"/recetas-es\", _recetas.methods.getRecetaES); // http://localhost:4000/recetas-es\nrouter.get(\"/recetas-mexico\", _recetas.methods.getRecetaMX); // http://localhost:4000/recetas-mexico\nrouter.get(\"/recetas-argentina\", _recetas.methods.getReceta_ARG); // http://localhost:4000/recetas-argentina\nrouter.get(\"/paises\", _recetas.methods.getPaises); // http://localhost:4000/paises\nrouter.get(\"/categorias\", _recetas.methods.getCategorias); // http://localhost:4000/categorias\nrouter.get(\"/categorias-postres\", _recetas.methods.getPostres); // http://localhost:4000/categorias-postres\nrouter.get(\"/categorias-desayuno\", _recetas.methods.getDesayuno); // http://localhost:4000/categorias-desayuno\n// METODOS POST\nrouter.post(\"/add-receta\", _recetas.methods.addReceta); // http://localhost:4000/add-receta\n// METODOS PUT\nrouter.put(\"/edit-receta/:id\", _recetas.methods.updateReceta); // http://localhost:4000/edit-receta/numero\n// METODOS DELETE\nrouter.delete(\"/delete-receta/:id\", _recetas.methods.deleteReceta); // http://localhost:4000/delete-receta/numero\n\n// ========= USUARIOS =========\n\n// METODO GET\nrouter.get(\"/\", _user.usermethods.getUser); // http://localhost:4000/usuario\nrouter.get(\"/usuarioejemplo\", _user.usermethods.ejemploUserPaginado); // http://localhost:4000/usuarioejemplo?page=1\n// METODO POST\nrouter.post(\"/usuario\"); // http://localhost:4000/usuario\n// METODO PUT\nrouter.put(\"/usuario\"); // http://localhost:4000/usuario\n// METODO DELETE\nrouter.delete(\"/usuario\"); // http://localhost:4000/usuario\nvar _default = exports.default = router;\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsInJlcXVpcmUiLCJfcmVjZXRhcyIsIl91c2VyIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVjZXRhc0NvbnRyb2xsZXIiLCJnZXRSZWNldGFzIiwidXNlckNvbnRyb2xsZXIiLCJnZXRVc2VyIiwiZ2V0UmVjZXRhIiwiZ2V0UmVjZXRhQ0wiLCJnZXRSZWNldGFVU0EiLCJnZXRSZWNldGFHQiIsImdldFJlY2V0YUNBIiwiZ2V0UmVjZXRhRVMiLCJnZXRSZWNldGFNWCIsImdldFJlY2V0YV9BUkciLCJnZXRQYWlzZXMiLCJnZXRDYXRlZ29yaWFzIiwiZ2V0UG9zdHJlcyIsImdldERlc2F5dW5vIiwicG9zdCIsImFkZFJlY2V0YSIsInB1dCIsInVwZGF0ZVJlY2V0YSIsImRlbGV0ZSIsImRlbGV0ZVJlY2V0YSIsImVqZW1wbG9Vc2VyUGFnaW5hZG8iLCJfZGVmYXVsdCIsImV4cG9ydHMiLCJkZWZhdWx0IiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHBhdHJpXFxPbmVEcml2ZVxcRG9jdW1lbnRvc1xcR2l0SHViXFxQb3J0YWZvbGlvLXRpdHVsb1xcQVBJICsgQkJERFxcQVBJIHJlY2V0YXNcXHNyY1xccm91dGVzXFwiLCJzb3VyY2VzIjpbImxhbmd1YWdlLnJvdXRlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tIFwiZXhwcmVzc1wiO1xyXG5pbXBvcnQgeyBtZXRob2RzIGFzIHJlY2V0YXNDb250cm9sbGVyIH0gZnJvbSBcIi4uL2NvbnRyb2xsZXJzL3JlY2V0YXMuY29udHJvbGxlclwiO1xyXG5pbXBvcnQgeyB1c2VybWV0aG9kcyBhcyB1c2VyQ29udHJvbGxlciB9IGZyb20gXCIuLi9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXJcIjtcclxuLy8gcnV0YSBkZWwgcHJveWVjdG9cclxuY29uc3Qgcm91dGVyPVJvdXRlcigpO1xyXG4vLyB1cmwgcHJpbmNpcGFsZXMgfCBodHRwOi8vbG9jYWxob3N0OjQwMDBcclxucm91dGVyLmdldChcIi9cIiwgcmVjZXRhc0NvbnRyb2xsZXIuZ2V0UmVjZXRhcyk7XHJcbnJvdXRlci5nZXQoXCIvdXN1YXJpb1wiLCB1c2VyQ29udHJvbGxlci5nZXRVc2VyKTtcclxuXHJcbi8vID09PT09PT09PSBSRUNFVEFTID09PT09PT09PVxyXG5cclxuLy8gTUVUT0RPUyBHRVRcclxucm91dGVyLmdldChcIi9yZWNldGEvOmlkXCIsIHJlY2V0YXNDb250cm9sbGVyLmdldFJlY2V0YSk7IC8vIGh0dHA6Ly9sb2NhbGhvc3Q6NDAwMC9yZWNldGEvbnVtZXJvXHJcbnJvdXRlci5nZXQoXCIvcmVjZXRhcy1jaGlsZVwiLHJlY2V0YXNDb250cm9sbGVyLmdldFJlY2V0YUNMKSAvLyBodHRwOi8vbG9jYWxob3N0OjQwMDAvcmVjZXRhcy1jaGlsZVxyXG5yb3V0ZXIuZ2V0KFwiL3JlY2V0YXMtdXNhXCIscmVjZXRhc0NvbnRyb2xsZXIuZ2V0UmVjZXRhVVNBKSAvLyBodHRwOi8vbG9jYWxob3N0OjQwMDAvcmVjZXRhcy11c2Fcclxucm91dGVyLmdldChcIi9yZWNldGFzLWdiXCIscmVjZXRhc0NvbnRyb2xsZXIuZ2V0UmVjZXRhR0IpIC8vIGh0dHA6Ly9sb2NhbGhvc3Q6NDAwMC9yZWNldGFzLWdiXHJcbnJvdXRlci5nZXQoXCIvcmVjZXRhcy1jYW5hZGFcIixyZWNldGFzQ29udHJvbGxlci5nZXRSZWNldGFDQSkgLy8gaHR0cDovL2xvY2FsaG9zdDo0MDAwL3JlY2V0YXMtY2FuYWRhXHJcbnJvdXRlci5nZXQoXCIvcmVjZXRhcy1lc1wiLHJlY2V0YXNDb250cm9sbGVyLmdldFJlY2V0YUVTKSAvLyBodHRwOi8vbG9jYWxob3N0OjQwMDAvcmVjZXRhcy1lc1xyXG5yb3V0ZXIuZ2V0KFwiL3JlY2V0YXMtbWV4aWNvXCIscmVjZXRhc0NvbnRyb2xsZXIuZ2V0UmVjZXRhTVgpIC8vIGh0dHA6Ly9sb2NhbGhvc3Q6NDAwMC9yZWNldGFzLW1leGljb1xyXG5yb3V0ZXIuZ2V0KFwiL3JlY2V0YXMtYXJnZW50aW5hXCIscmVjZXRhc0NvbnRyb2xsZXIuZ2V0UmVjZXRhX0FSRykgLy8gaHR0cDovL2xvY2FsaG9zdDo0MDAwL3JlY2V0YXMtYXJnZW50aW5hXHJcbnJvdXRlci5nZXQoXCIvcGFpc2VzXCIscmVjZXRhc0NvbnRyb2xsZXIuZ2V0UGFpc2VzKSAvLyBodHRwOi8vbG9jYWxob3N0OjQwMDAvcGFpc2VzXHJcbnJvdXRlci5nZXQoXCIvY2F0ZWdvcmlhc1wiLHJlY2V0YXNDb250cm9sbGVyLmdldENhdGVnb3JpYXMpIC8vIGh0dHA6Ly9sb2NhbGhvc3Q6NDAwMC9jYXRlZ29yaWFzXHJcbnJvdXRlci5nZXQoXCIvY2F0ZWdvcmlhcy1wb3N0cmVzXCIscmVjZXRhc0NvbnRyb2xsZXIuZ2V0UG9zdHJlcykgLy8gaHR0cDovL2xvY2FsaG9zdDo0MDAwL2NhdGVnb3JpYXMtcG9zdHJlc1xyXG5yb3V0ZXIuZ2V0KFwiL2NhdGVnb3JpYXMtZGVzYXl1bm9cIixyZWNldGFzQ29udHJvbGxlci5nZXREZXNheXVubykgLy8gaHR0cDovL2xvY2FsaG9zdDo0MDAwL2NhdGVnb3JpYXMtZGVzYXl1bm9cclxuLy8gTUVUT0RPUyBQT1NUXHJcbnJvdXRlci5wb3N0KFwiL2FkZC1yZWNldGFcIiwgcmVjZXRhc0NvbnRyb2xsZXIuYWRkUmVjZXRhKTsgLy8gaHR0cDovL2xvY2FsaG9zdDo0MDAwL2FkZC1yZWNldGFcclxuLy8gTUVUT0RPUyBQVVRcclxucm91dGVyLnB1dChcIi9lZGl0LXJlY2V0YS86aWRcIiwgcmVjZXRhc0NvbnRyb2xsZXIudXBkYXRlUmVjZXRhKTsgLy8gaHR0cDovL2xvY2FsaG9zdDo0MDAwL2VkaXQtcmVjZXRhL251bWVyb1xyXG4vLyBNRVRPRE9TIERFTEVURVxyXG5yb3V0ZXIuZGVsZXRlKFwiL2RlbGV0ZS1yZWNldGEvOmlkXCIsIHJlY2V0YXNDb250cm9sbGVyLmRlbGV0ZVJlY2V0YSk7IC8vIGh0dHA6Ly9sb2NhbGhvc3Q6NDAwMC9kZWxldGUtcmVjZXRhL251bWVyb1xyXG5cclxuXHJcbi8vID09PT09PT09PSBVU1VBUklPUyA9PT09PT09PT1cclxuXHJcbi8vIE1FVE9ETyBHRVRcclxucm91dGVyLmdldChcIi9cIiwgdXNlckNvbnRyb2xsZXIuZ2V0VXNlcik7IC8vIGh0dHA6Ly9sb2NhbGhvc3Q6NDAwMC91c3VhcmlvXHJcbnJvdXRlci5nZXQoXCIvdXN1YXJpb2VqZW1wbG9cIiwgdXNlckNvbnRyb2xsZXIuZWplbXBsb1VzZXJQYWdpbmFkbyk7IC8vIGh0dHA6Ly9sb2NhbGhvc3Q6NDAwMC91c3VhcmlvZWplbXBsbz9wYWdlPTFcclxuLy8gTUVUT0RPIFBPU1Rcclxucm91dGVyLnBvc3QoXCIvdXN1YXJpb1wiKTsgLy8gaHR0cDovL2xvY2FsaG9zdDo0MDAwL3VzdWFyaW9cclxuLy8gTUVUT0RPIFBVVFxyXG5yb3V0ZXIucHV0KFwiL3VzdWFyaW9cIik7IC8vIGh0dHA6Ly9sb2NhbGhvc3Q6NDAwMC91c3VhcmlvXHJcbi8vIE1FVE9ETyBERUxFVEVcclxucm91dGVyLmRlbGV0ZShcIi91c3VhcmlvXCIpOyAvLyBodHRwOi8vbG9jYWxob3N0OjQwMDAvdXN1YXJpb1xyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxRQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxRQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxLQUFBLEdBQUFGLE9BQUE7QUFDQTtBQUNBLE1BQU1HLE1BQU0sR0FBQyxJQUFBQyxlQUFNLEVBQUMsQ0FBQztBQUNyQjtBQUNBRCxNQUFNLENBQUNFLEdBQUcsQ0FBQyxHQUFHLEVBQUVDLGdCQUFpQixDQUFDQyxVQUFVLENBQUM7QUFDN0NKLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLFVBQVUsRUFBRUcsaUJBQWMsQ0FBQ0MsT0FBTyxDQUFDOztBQUU5Qzs7QUFFQTtBQUNBTixNQUFNLENBQUNFLEdBQUcsQ0FBQyxhQUFhLEVBQUVDLGdCQUFpQixDQUFDSSxTQUFTLENBQUMsQ0FBQyxDQUFDO0FBQ3hEUCxNQUFNLENBQUNFLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBQ0MsZ0JBQWlCLENBQUNLLFdBQVcsQ0FBQyxFQUFDO0FBQzNEUixNQUFNLENBQUNFLEdBQUcsQ0FBQyxjQUFjLEVBQUNDLGdCQUFpQixDQUFDTSxZQUFZLENBQUMsRUFBQztBQUMxRFQsTUFBTSxDQUFDRSxHQUFHLENBQUMsYUFBYSxFQUFDQyxnQkFBaUIsQ0FBQ08sV0FBVyxDQUFDLEVBQUM7QUFDeERWLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLGlCQUFpQixFQUFDQyxnQkFBaUIsQ0FBQ1EsV0FBVyxDQUFDLEVBQUM7QUFDNURYLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLGFBQWEsRUFBQ0MsZ0JBQWlCLENBQUNTLFdBQVcsQ0FBQyxFQUFDO0FBQ3hEWixNQUFNLENBQUNFLEdBQUcsQ0FBQyxpQkFBaUIsRUFBQ0MsZ0JBQWlCLENBQUNVLFdBQVcsQ0FBQyxFQUFDO0FBQzVEYixNQUFNLENBQUNFLEdBQUcsQ0FBQyxvQkFBb0IsRUFBQ0MsZ0JBQWlCLENBQUNXLGFBQWEsQ0FBQyxFQUFDO0FBQ2pFZCxNQUFNLENBQUNFLEdBQUcsQ0FBQyxTQUFTLEVBQUNDLGdCQUFpQixDQUFDWSxTQUFTLENBQUMsRUFBQztBQUNsRGYsTUFBTSxDQUFDRSxHQUFHLENBQUMsYUFBYSxFQUFDQyxnQkFBaUIsQ0FBQ2EsYUFBYSxDQUFDLEVBQUM7QUFDMURoQixNQUFNLENBQUNFLEdBQUcsQ0FBQyxxQkFBcUIsRUFBQ0MsZ0JBQWlCLENBQUNjLFVBQVUsQ0FBQyxFQUFDO0FBQy9EakIsTUFBTSxDQUFDRSxHQUFHLENBQUMsc0JBQXNCLEVBQUNDLGdCQUFpQixDQUFDZSxXQUFXLENBQUMsRUFBQztBQUNqRTtBQUNBbEIsTUFBTSxDQUFDbUIsSUFBSSxDQUFDLGFBQWEsRUFBRWhCLGdCQUFpQixDQUFDaUIsU0FBUyxDQUFDLENBQUMsQ0FBQztBQUN6RDtBQUNBcEIsTUFBTSxDQUFDcUIsR0FBRyxDQUFDLGtCQUFrQixFQUFFbEIsZ0JBQWlCLENBQUNtQixZQUFZLENBQUMsQ0FBQyxDQUFDO0FBQ2hFO0FBQ0F0QixNQUFNLENBQUN1QixNQUFNLENBQUMsb0JBQW9CLEVBQUVwQixnQkFBaUIsQ0FBQ3FCLFlBQVksQ0FBQyxDQUFDLENBQUM7O0FBR3JFOztBQUVBO0FBQ0F4QixNQUFNLENBQUNFLEdBQUcsQ0FBQyxHQUFHLEVBQUVHLGlCQUFjLENBQUNDLE9BQU8sQ0FBQyxDQUFDLENBQUM7QUFDekNOLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLGlCQUFpQixFQUFFRyxpQkFBYyxDQUFDb0IsbUJBQW1CLENBQUMsQ0FBQyxDQUFDO0FBQ25FO0FBQ0F6QixNQUFNLENBQUNtQixJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztBQUN6QjtBQUNBbkIsTUFBTSxDQUFDcUIsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7QUFDeEI7QUFDQXJCLE1BQU0sQ0FBQ3VCLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO0FBQUEsSUFBQUcsUUFBQSxHQUFBQyxPQUFBLENBQUFDLE9BQUEsR0FHWjVCLE1BQU07QUFFckI2QixNQUFNLENBQUNGLE9BQU8sR0FBRzNCLE1BQU0iLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["_express","require","_recetas","_user","router","Router","get","recetasController","getRecetas","userController","getUser","getReceta","getRecetaCL","getRecetaUSA","getRecetaGB","getRecetaCA","getRecetaES","getRecetaMX","getReceta_ARG","getPaises","getCategorias","getPostres","getDesayuno","post","addReceta","put","updateReceta","delete","deleteReceta","ejemploUserPaginado","_default","exports","default","module"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\routes\\","sources":["language.routes.js"],"sourcesContent":["import { Router } from \"express\";\r\nimport { methods as recetasController } from \"../controllers/recetas.controller\";\r\nimport { usermethods as userController } from \"../controllers/user.controller\";\r\n// ruta del proyecto\r\nconst router=Router();\r\n// url principales | http://localhost:4000\r\nrouter.get(\"/\", recetasController.getRecetas);\r\nrouter.get(\"/usuario\", userController.getUser);\r\n\r\n// ========= RECETAS =========\r\n\r\n// METODOS GET\r\nrouter.get(\"/receta/:id\", recetasController.getReceta); // http://localhost:4000/receta/numero\r\nrouter.get(\"/recetas-chile\",recetasController.getRecetaCL) // http://localhost:4000/recetas-chile\r\nrouter.get(\"/recetas-usa\",recetasController.getRecetaUSA) // http://localhost:4000/recetas-usa\r\nrouter.get(\"/recetas-gb\",recetasController.getRecetaGB) // http://localhost:4000/recetas-gb\r\nrouter.get(\"/recetas-canada\",recetasController.getRecetaCA) // http://localhost:4000/recetas-canada\r\nrouter.get(\"/recetas-es\",recetasController.getRecetaES) // http://localhost:4000/recetas-es\r\nrouter.get(\"/recetas-mexico\",recetasController.getRecetaMX) // http://localhost:4000/recetas-mexico\r\nrouter.get(\"/recetas-argentina\",recetasController.getReceta_ARG) // http://localhost:4000/recetas-argentina\r\nrouter.get(\"/paises\",recetasController.getPaises) // http://localhost:4000/paises\r\nrouter.get(\"/categorias\",recetasController.getCategorias) // http://localhost:4000/categorias\r\nrouter.get(\"/categorias-postres\",recetasController.getPostres) // http://localhost:4000/categorias-postres\r\nrouter.get(\"/categorias-desayuno\",recetasController.getDesayuno) // http://localhost:4000/categorias-desayuno\r\n// METODOS POST\r\nrouter.post(\"/add-receta\", recetasController.addReceta); // http://localhost:4000/add-receta\r\n// METODOS PUT\r\nrouter.put(\"/edit-receta/:id\", recetasController.updateReceta); // http://localhost:4000/edit-receta/numero\r\n// METODOS DELETE\r\nrouter.delete(\"/delete-receta/:id\", recetasController.deleteReceta); // http://localhost:4000/delete-receta/numero\r\n\r\n\r\n// ========= USUARIOS =========\r\n\r\n// METODO GET\r\nrouter.get(\"/\", userController.getUser); // http://localhost:4000/usuario\r\nrouter.get(\"/usuarioejemplo\", userController.ejemploUserPaginado); // http://localhost:4000/usuarioejemplo?page=1\r\n// METODO POST\r\nrouter.post(\"/usuario\"); // http://localhost:4000/usuario\r\n// METODO PUT\r\nrouter.put(\"/usuario\"); // http://localhost:4000/usuario\r\n// METODO DELETE\r\nrouter.delete(\"/usuario\"); // http://localhost:4000/usuario\r\n\r\n\r\nexport default router;\r\n\r\nmodule.exports = router"],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,QAAA,GAAAD,OAAA;AACA,IAAAE,KAAA,GAAAF,OAAA;AACA;AACA,MAAMG,MAAM,GAAC,IAAAC,eAAM,EAAC,CAAC;AACrB;AACAD,MAAM,CAACE,GAAG,CAAC,GAAG,EAAEC,gBAAiB,CAACC,UAAU,CAAC;AAC7CJ,MAAM,CAACE,GAAG,CAAC,UAAU,EAAEG,iBAAc,CAACC,OAAO,CAAC;;AAE9C;;AAEA;AACAN,MAAM,CAACE,GAAG,CAAC,aAAa,EAAEC,gBAAiB,CAACI,SAAS,CAAC,CAAC,CAAC;AACxDP,MAAM,CAACE,GAAG,CAAC,gBAAgB,EAACC,gBAAiB,CAACK,WAAW,CAAC,EAAC;AAC3DR,MAAM,CAACE,GAAG,CAAC,cAAc,EAACC,gBAAiB,CAACM,YAAY,CAAC,EAAC;AAC1DT,MAAM,CAACE,GAAG,CAAC,aAAa,EAACC,gBAAiB,CAACO,WAAW,CAAC,EAAC;AACxDV,MAAM,CAACE,GAAG,CAAC,iBAAiB,EAACC,gBAAiB,CAACQ,WAAW,CAAC,EAAC;AAC5DX,MAAM,CAACE,GAAG,CAAC,aAAa,EAACC,gBAAiB,CAACS,WAAW,CAAC,EAAC;AACxDZ,MAAM,CAACE,GAAG,CAAC,iBAAiB,EAACC,gBAAiB,CAACU,WAAW,CAAC,EAAC;AAC5Db,MAAM,CAACE,GAAG,CAAC,oBAAoB,EAACC,gBAAiB,CAACW,aAAa,CAAC,EAAC;AACjEd,MAAM,CAACE,GAAG,CAAC,SAAS,EAACC,gBAAiB,CAACY,SAAS,CAAC,EAAC;AAClDf,MAAM,CAACE,GAAG,CAAC,aAAa,EAACC,gBAAiB,CAACa,aAAa,CAAC,EAAC;AAC1DhB,MAAM,CAACE,GAAG,CAAC,qBAAqB,EAACC,gBAAiB,CAACc,UAAU,CAAC,EAAC;AAC/DjB,MAAM,CAACE,GAAG,CAAC,sBAAsB,EAACC,gBAAiB,CAACe,WAAW,CAAC,EAAC;AACjE;AACAlB,MAAM,CAACmB,IAAI,CAAC,aAAa,EAAEhB,gBAAiB,CAACiB,SAAS,CAAC,CAAC,CAAC;AACzD;AACApB,MAAM,CAACqB,GAAG,CAAC,kBAAkB,EAAElB,gBAAiB,CAACmB,YAAY,CAAC,CAAC,CAAC;AAChE;AACAtB,MAAM,CAACuB,MAAM,CAAC,oBAAoB,EAAEpB,gBAAiB,CAACqB,YAAY,CAAC,CAAC,CAAC;;AAGrE;;AAEA;AACAxB,MAAM,CAACE,GAAG,CAAC,GAAG,EAAEG,iBAAc,CAACC,OAAO,CAAC,CAAC,CAAC;AACzCN,MAAM,CAACE,GAAG,CAAC,iBAAiB,EAAEG,iBAAc,CAACoB,mBAAmB,CAAC,CAAC,CAAC;AACnE;AACAzB,MAAM,CAACmB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AACzB;AACAnB,MAAM,CAACqB,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;AACxB;AACArB,MAAM,CAACuB,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;AAAA,IAAAG,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGZ5B,MAAM;AAErB6B,MAAM,CAACF,OAAO,GAAG3B,MAAM","ignoreList":[]}},"mtime":1713199549760},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\controllers\\\\language.controller.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.methods = void 0;\nvar _database = require(\"./../database/database\");\n// PARA OBTENER LOS RESULTADOS\nconst getRecetas = async (req, res) => {\n  try {\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n        recetas_del_mundo.id_receta, \n        recetas_del_mundo.nombre_receta, \n        recetas_del_mundo.ingrediente_receta, \n        recetas_del_mundo.Año, \n        recetas_del_mundo.pais_receta, \n        recetas_del_mundo.preparacion_receta, \n        recetas_del_mundo.fecha_creacion, \n        recetas_del_mundo.url_imagen_receta, \n        recetas_del_mundo.categoria,\n        usuarios.nombres as \"creado_por\" \n        FROM recetas_del_mundo\n        INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user;`);\n\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      console.log(\"No hay más resultados disponibles.\");\n      return res.status(404).json({\n        message: \"No hay más resultados disponibles.\"\n      });\n    }\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENER LOS RESULTADOS\nconst getPaises = async (req, res) => {\n  try {\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT DISTINCT pais_receta FROM recetas_del_mundo;`);\n\n    // Verificar si hay resultados\n    // if (result.length === 0) {\n    //     console.log(\"No hay más resultados disponibles.\");\n    //     return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\n    // }\n    console.log(result); // Este es el mensaje que se desplegará en la consola\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENER LOS RESULTADOS\nconst getCategorias = async (req, res) => {\n  try {\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT DISTINCT categoria FROM recetas_del_mundo;`);\n\n    // Verificar si hay resultados\n    // if (result.length === 0) {\n    //     console.log(\"No hay más resultados disponibles.\");\n    //     return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\n    // }\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENERLOS POR id\nconst getReceta = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.categoria,\n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.id_receta=?`, id);\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA AÑADIR ELEMENTOS\nconst addReceta = async (req, res) => {\n  try {\n    const {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      preparacion_receta,\n      categoria,\n      id_user\n    } = req.body;\n\n    // if (nombre_receta == undefined || ingrediente_receta == undefined) {\n    //     return res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\n    // }\n\n    const receta = {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      preparacion_receta,\n      categoria,\n      id_user\n    };\n    const connection = await (0, _database.getConnection)();\n    await connection.query(\"INSERT INTO recetas_del_mundo SET ?\", receta);\n    res.json({\n      message: \"Receta añadida exitosamente\"\n    });\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA ELIMINAR ELEMENTOS\nconst deleteReceta = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"DELETE FROM recetas_del_mundo WHERE id_receta = ?;\", id);\n    if (result.affectedRows > 0) {\n      // Elemento borrado exitosamente\n      res.json({\n        message: `Elemento con ID ${id} borrado exitosamente.`\n      });\n    } else {\n      // No se encontró ningún elemento con el ID proporcionado\n      res.status(404).json({\n        message: `No se encontró ningún elemento con el ID ${id}.`\n      });\n    }\n  } catch (error) {\n    // Error en la solicitud\n    res.status(500).send(error.message);\n  }\n};\n\n// PARA ACTUALIZAR ELEMENTOS\nconst updateReceta = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      categoria,\n      preparacion_receta,\n      id_user\n    } = req.body;\n    if (nombre_receta == undefined || ingrediente_receta == undefined) {\n      return res.status(400).json({\n        message: \"Bad Request, Por favor, completar los datos.\"\n      });\n    }\n    const receta = {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      categoria,\n      preparacion_receta,\n      id_user\n    };\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"UPDATE recetas_del_mundo SET ? WHERE id_receta = ?;\", [receta, id]);\n\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// ============================DESGLOSE POR PAISES ========================================\n// LISTADO:\n// Chile || Estados Unidos || Gran Bretaña || Canada || España || Mexico || Argentina\n\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaCL = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='chile';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENERLOS POR pais = Estados Unidos\nconst getRecetaUSA = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta = 'Estados Unidos';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = Gran Bretaña\nconst getRecetaGB = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Gran Bretaña';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaCA = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Canada';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaES = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='españa';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaMX = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Mexico';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getReceta_ARG = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Argentina';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// =====================================================================\n// GESTION DE CATEGORIAS COMO POSTRES, ETC\n// =====================================================================\n\n// seleccionar postres\nconst getPostres = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            recetas_del_mundo.categoria, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.categoria='postres';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// seleccionar desayunos\nconst getDesayuno = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            recetas_del_mundo.categoria, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.categoria='desayuno';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// =======================================================================\n//    ===================== GESTIÓN DE USUARIOS ========================\n// =======================================================================\nconst getUser = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"SELECT id_user,nombres,user,fecha_creacion FROM usuarios\");\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\nconst ejemploUserPaginado = async (req, res) => {\n  try {\n    const {\n      page\n    } = req.query; // Obtener el número de página de la consulta\n    const itemsPerPage = 10; // Número de resultados por página\n\n    // Calcular el offset basado en la página actual\n    const offset = (page - 1) * itemsPerPage;\n    const connection = await (0, _database.getConnection)();\n\n    // Consulta SQL con LIMIT y OFFSET para la paginación\n    const result = await connection.query(`SELECT id_user, nombres, user, fecha_creacion FROM usuarios LIMIT ${itemsPerPage} OFFSET ${offset}`);\n\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"No hay más resultados disponibles.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500).send(error.message);\n  }\n};\n\n// PARA AÑADIR USUARIOS\nconst addUsuario = async (req, res) => {\n  try {\n    const {\n      nombres,\n      user,\n      password,\n      fecha_creacion\n    } = req.body;\n    // console.log(banda)\n    // console.log(disco)\n    if (nombres == undefined || user == undefined) {\n      res.status(400).json({\n        message: \"Bad Request, Por favor, completa los datos.\"\n      });\n    }\n    const usuarionuevo = {\n      nombres,\n      user,\n      password,\n      fecha_creacion\n    };\n    const connection = await (0, _database.getConnection)();\n    await connection.query(\"INSERT INTO usuarios SET ?\", usuarionuevo);\n    res.json({\n      message: `Usuario ${user} añadido exitosamente`\n    });\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA ACTUALIZAR USUARIOS\nconst updateUsuario = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const {\n      nombres,\n      user,\n      password\n    } = req.body;\n    if (user === undefined) {\n      return res.status(400).json({\n        message: \"Bad Request, Por favor, completar los datos.\"\n      });\n    }\n    const usuarioupdate = {\n      nombres,\n      user,\n      password\n    };\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"UPDATE usuarios SET ? WHERE id_user = ?;\", [usuarioupdate, id]);\n    res.json({\n      message: `Usuario ${user} Editado exitosamente`\n    });\n    // console.log(result);\n    // res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA ELIMINAR ELEMENTOS\nconst deleteUsuario = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"DELETE FROM usuarios WHERE id_user = ?;\", id);\n    if (result.affectedRows > 0) {\n      // Elemento borrado exitosamente\n      res.json({\n        message: `Usuario con ID ${id} borrado exitosamente.`\n      });\n    } else {\n      // No se encontró ningún elemento con el ID proporcionado\n      res.status(404).json({\n        message: `No se encontró ningún usuario con el ID ${id}.`\n      });\n    }\n  } catch (error) {\n    // Error en la solicitud\n    res.status(500).send(error.message);\n  }\n};\nconst methods = exports.methods = {\n  // GET \n  getRecetas,\n  getReceta,\n  getRecetaCL,\n  getRecetaUSA,\n  getRecetaGB,\n  getRecetaCA,\n  getRecetaES,\n  getRecetaMX,\n  getReceta_ARG,\n  getPaises,\n  // CATEGORIAS\n  getCategorias,\n  getPostres,\n  getDesayuno,\n  // POST\n  addReceta,\n  // PUT\n  updateReceta,\n  // DELETE\n  deleteReceta,\n  // gestión usuarios\n  getUser,\n  ejemploUserPaginado,\n  addUsuario,\n  updateUsuario,\n  deleteUsuario\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_database","require","getRecetas","req","res","connection","getConnection","result","query","length","console","log","status","json","message","error","send","getPaises","getCategorias","getReceta","params","id","addReceta","nombre_receta","ingrediente_receta","pais_receta","preparacion_receta","categoria","id_user","body","receta","deleteReceta","affectedRows","updateReceta","undefined","getRecetaCL","getRecetaUSA","getRecetaGB","getRecetaCA","getRecetaES","getRecetaMX","getReceta_ARG","getPostres","getDesayuno","getUser","ejemploUserPaginado","page","itemsPerPage","offset","addUsuario","nombres","user","password","fecha_creacion","usuarionuevo","updateUsuario","usuarioupdate","deleteUsuario","methods","exports"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\controllers\\","sources":["language.controller.js"],"sourcesContent":["import { getConnection } from \"./../database/database\"\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getRecetas = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n        `SELECT  \r\n        recetas_del_mundo.id_receta, \r\n        recetas_del_mundo.nombre_receta, \r\n        recetas_del_mundo.ingrediente_receta, \r\n        recetas_del_mundo.Año, \r\n        recetas_del_mundo.pais_receta, \r\n        recetas_del_mundo.preparacion_receta, \r\n        recetas_del_mundo.fecha_creacion, \r\n        recetas_del_mundo.url_imagen_receta, \r\n        recetas_del_mundo.categoria,\r\n        usuarios.nombres as \"creado_por\" \r\n        FROM recetas_del_mundo\r\n        INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user;`);\r\n        \r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            console.log(\"No hay más resultados disponibles.\");\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getPaises = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n        `SELECT DISTINCT pais_receta FROM recetas_del_mundo;`);\r\n        \r\n        // Verificar si hay resultados\r\n        // if (result.length === 0) {\r\n        //     console.log(\"No hay más resultados disponibles.\");\r\n        //     return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        // }\r\n        console.log(result); // Este es el mensaje que se desplegará en la consola\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getCategorias = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n        `SELECT DISTINCT categoria FROM recetas_del_mundo;`);\r\n        \r\n        // Verificar si hay resultados\r\n        // if (result.length === 0) {\r\n        //     console.log(\"No hay más resultados disponibles.\");\r\n        //     return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        // }\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENERLOS POR id\r\nconst getReceta = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.categoria,\r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.id_receta=?`, id);\r\n        // console.log(result);\r\n         // Verificar si hay resultados\r\n         if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n\r\n// PARA AÑADIR ELEMENTOS\r\nconst addReceta = async (req, res) => {\r\n\r\n    try {\r\n        const {nombre_receta, ingrediente_receta, pais_receta, preparacion_receta, categoria, id_user} = req.body;\r\n\r\n        // if (nombre_receta == undefined || ingrediente_receta == undefined) {\r\n        //     return res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\r\n        // }\r\n\r\n        const receta = {\r\n            nombre_receta, ingrediente_receta, pais_receta, preparacion_receta, categoria, id_user\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        await connection.query(\"INSERT INTO recetas_del_mundo SET ?\", receta);\r\n        res.json({ message: \"Receta añadida exitosamente\" })\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA ELIMINAR ELEMENTOS\r\nconst deleteReceta = async (req, res) => {\r\n    try {\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"DELETE FROM recetas_del_mundo WHERE id_receta = ?;\", id);\r\n\r\n        if (result.affectedRows > 0) {\r\n            // Elemento borrado exitosamente\r\n            res.json({ message: `Elemento con ID ${id} borrado exitosamente.` });\r\n        } else {\r\n            // No se encontró ningún elemento con el ID proporcionado\r\n            res.status(404).json({ message: `No se encontró ningún elemento con el ID ${id}.` });\r\n        }\r\n    } catch (error) {\r\n        // Error en la solicitud\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n// PARA ACTUALIZAR ELEMENTOS\r\nconst updateReceta = async (req, res) => {\r\n\r\n    try {\r\n        const { id } = req.params;\r\n        const { nombre_receta, ingrediente_receta, pais_receta, categoria, preparacion_receta, id_user } = req.body;\r\n        if (nombre_receta == undefined || ingrediente_receta == undefined) {\r\n            return res.status(400).json({ message: \"Bad Request, Por favor, completar los datos.\" })\r\n        }\r\n        const receta = {\r\n            nombre_receta, ingrediente_receta, pais_receta, categoria, preparacion_receta, id_user\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"UPDATE recetas_del_mundo SET ? WHERE id_receta = ?;\",[receta,id]);\r\n        \r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// ============================DESGLOSE POR PAISES ========================================\r\n// LISTADO:\r\n// Chile || Estados Unidos || Gran Bretaña || Canada || España || Mexico || Argentina\r\n    \r\n\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaCL = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='chile';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENERLOS POR pais = Estados Unidos\r\nconst getRecetaUSA = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta = 'Estados Unidos';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = Gran Bretaña\r\nconst getRecetaGB = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Gran Bretaña';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaCA = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Canada';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaES = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='españa';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaMX = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Mexico';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getReceta_ARG = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Argentina';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// =====================================================================\r\n                        // GESTION DE CATEGORIAS COMO POSTRES, ETC\r\n// =====================================================================\r\n\r\n\r\n// seleccionar postres\r\nconst getPostres = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            recetas_del_mundo.categoria, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.categoria='postres';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// seleccionar desayunos\r\nconst getDesayuno = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            recetas_del_mundo.categoria, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.categoria='desayuno';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// =======================================================================\r\n//    ===================== GESTIÓN DE USUARIOS ========================\r\n// =======================================================================\r\nconst getUser = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"SELECT id_user,nombres,user,fecha_creacion FROM usuarios\");\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\nconst ejemploUserPaginado = async (req, res) => {\r\n    try {\r\n        const { page } = req.query; // Obtener el número de página de la consulta\r\n        const itemsPerPage = 10; // Número de resultados por página\r\n\r\n        // Calcular el offset basado en la página actual\r\n        const offset = (page - 1) * itemsPerPage;\r\n\r\n        const connection = await getConnection();\r\n\r\n        // Consulta SQL con LIMIT y OFFSET para la paginación\r\n        const result = await connection.query(\r\n            `SELECT id_user, nombres, user, fecha_creacion FROM usuarios LIMIT ${itemsPerPage} OFFSET ${offset}`\r\n        );\r\n\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA AÑADIR USUARIOS\r\nconst addUsuario = async (req, res) => {\r\n\r\n    try {\r\n        const { nombres, user, password, fecha_creacion } = req.body;\r\n        // console.log(banda)\r\n        // console.log(disco)\r\n        if (nombres == undefined || user == undefined) {\r\n            res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\r\n        }\r\n        const usuarionuevo = {\r\n            nombres, user, password, fecha_creacion\r\n        }\r\n        const connection = await getConnection();\r\n        await connection.query(\"INSERT INTO usuarios SET ?\", usuarionuevo);\r\n        res.json({ message: `Usuario ${user} añadido exitosamente`})\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA ACTUALIZAR USUARIOS\r\nconst updateUsuario = async (req, res) => {\r\n\r\n    try {\r\n        const { id } = req.params;\r\n        const { nombres, user, password, } = req.body;\r\n        if (user === undefined) {\r\n            return res.status(400).json({ message: \"Bad Request, Por favor, completar los datos.\" })\r\n        }\r\n        const usuarioupdate = {\r\n            nombres, user, password,\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"UPDATE usuarios SET ? WHERE id_user = ?;\",[usuarioupdate,id]);\r\n        res.json( { message: `Usuario ${user} Editado exitosamente`})\r\n        // console.log(result);\r\n        // res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA ELIMINAR ELEMENTOS\r\nconst deleteUsuario = async (req, res) => {\r\n    try {\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"DELETE FROM usuarios WHERE id_user = ?;\", id);\r\n\r\n        if (result.affectedRows > 0) {\r\n            // Elemento borrado exitosamente\r\n            res.json({ message: `Usuario con ID ${id} borrado exitosamente.` });\r\n        } else {\r\n            // No se encontró ningún elemento con el ID proporcionado\r\n            res.status(404).json({ message: `No se encontró ningún usuario con el ID ${id}.` });\r\n        }\r\n    } catch (error) {\r\n        // Error en la solicitud\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n\r\nexport const methods = {\r\n    // GET \r\n    getRecetas, getReceta, getRecetaCL, getRecetaUSA, getRecetaGB, getRecetaCA, getRecetaES, getRecetaMX, getReceta_ARG, getPaises,\r\n    // CATEGORIAS\r\n     getCategorias, getPostres, getDesayuno,\r\n    // POST\r\n    addReceta,\r\n    // PUT\r\n    updateReceta,\r\n    // DELETE\r\n    deleteReceta,\r\n    // gestión usuarios\r\n    getUser, ejemploUserPaginado, addUsuario, updateUsuario, deleteUsuario,\r\n    \r\n};\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1713150854296},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\database\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\database\\\\database.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nvar _promiseMysql = _interopRequireDefault(require(\"promise-mysql\"));\nvar _config = require(\"./../config\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst connection = _promiseMysql.default.createConnection({\n  host: _config.claves.host,\n  database: _config.claves.database,\n  user: _config.claves.user,\n  password: _config.claves.password\n});\nconst getConnection = () => {\n  return connection;\n};\nmodule.exports = {\n  getConnection\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcHJvbWlzZU15c3FsIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfY29uZmlnIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJjb25uZWN0aW9uIiwibXlzcWwiLCJjcmVhdGVDb25uZWN0aW9uIiwiaG9zdCIsImNsYXZlcyIsImRhdGFiYXNlIiwidXNlciIsInBhc3N3b3JkIiwiZ2V0Q29ubmVjdGlvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xccGF0cmlcXE9uZURyaXZlXFxEb2N1bWVudG9zXFxHaXRIdWJcXFBvcnRhZm9saW8tdGl0dWxvXFxBUEkgKyBCQkREXFxBUEkgcmVjZXRhc1xcc3JjXFxkYXRhYmFzZVxcIiwic291cmNlcyI6WyJkYXRhYmFzZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbXlzcWwgZnJvbSBcInByb21pc2UtbXlzcWxcIjtcclxuaW1wb3J0IHsgY2xhdmVzIH0gZnJvbSBcIi4vLi4vY29uZmlnXCI7XHJcblxyXG5jb25zdCBjb25uZWN0aW9uID0gbXlzcWwuY3JlYXRlQ29ubmVjdGlvbih7XHJcbiAgICBob3N0OiBjbGF2ZXMuaG9zdCxcclxuICAgIGRhdGFiYXNlOiBjbGF2ZXMuZGF0YWJhc2UsXHJcbiAgICB1c2VyOiBjbGF2ZXMudXNlcixcclxuICAgIHBhc3N3b3JkOiBjbGF2ZXMucGFzc3dvcmRcclxufSk7XHJcblxyXG5jb25zdCBnZXRDb25uZWN0aW9uID0gKCkgPT4ge1xyXG4gICAgcmV0dXJuIGNvbm5lY3Rpb247XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgZ2V0Q29ubmVjdGlvblxyXG59XHJcbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFBQSxhQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxPQUFBLEdBQUFELE9BQUE7QUFBcUMsU0FBQUQsdUJBQUFHLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxLQUFBRSxPQUFBLEVBQUFGLEdBQUE7QUFFckMsTUFBTUcsVUFBVSxHQUFHQyxxQkFBSyxDQUFDQyxnQkFBZ0IsQ0FBQztFQUN0Q0MsSUFBSSxFQUFFQyxjQUFNLENBQUNELElBQUk7RUFDakJFLFFBQVEsRUFBRUQsY0FBTSxDQUFDQyxRQUFRO0VBQ3pCQyxJQUFJLEVBQUVGLGNBQU0sQ0FBQ0UsSUFBSTtFQUNqQkMsUUFBUSxFQUFFSCxjQUFNLENBQUNHO0FBQ3JCLENBQUMsQ0FBQztBQUVGLE1BQU1DLGFBQWEsR0FBR0EsQ0FBQSxLQUFNO0VBQ3hCLE9BQU9SLFVBQVU7QUFDckIsQ0FBQztBQUVEUyxNQUFNLENBQUNDLE9BQU8sR0FBRztFQUNiRjtBQUNKLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["_promiseMysql","_interopRequireDefault","require","_config","obj","__esModule","default","connection","mysql","createConnection","host","claves","database","user","password","getConnection","module","exports"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\database\\","sources":["database.js"],"sourcesContent":["import mysql from \"promise-mysql\";\r\nimport { claves } from \"./../config\";\r\n\r\nconst connection = mysql.createConnection({\r\n    host: claves.host,\r\n    database: claves.database,\r\n    user: claves.user,\r\n    password: claves.password\r\n});\r\n\r\nconst getConnection = () => {\r\n    return connection;\r\n}\r\n\r\nmodule.exports = {\r\n    getConnection\r\n}\r\n"],"mappings":";;AAAA,IAAAA,aAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAAqC,SAAAD,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAErC,MAAMG,UAAU,GAAGC,qBAAK,CAACC,gBAAgB,CAAC;EACtCC,IAAI,EAAEC,cAAM,CAACD,IAAI;EACjBE,QAAQ,EAAED,cAAM,CAACC,QAAQ;EACzBC,IAAI,EAAEF,cAAM,CAACE,IAAI;EACjBC,QAAQ,EAAEH,cAAM,CAACG;AACrB,CAAC,CAAC;AAEF,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACxB,OAAOR,UAAU;AACrB,CAAC;AAEDS,MAAM,CAACC,OAAO,GAAG;EACbF;AACJ,CAAC","ignoreList":[]}},"mtime":1713191435218},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\config.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.claves = void 0;\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n_dotenv.default.config();\nconst claves = exports.claves = {\n  host: process.env.HOST || \"\",\n  database: process.env.DATABASE || \"\",\n  user: process.env.USER || \"\",\n  password: process.env.PASSWORD || \"\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZG90ZW52IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImRvdGVudiIsImNvbmZpZyIsImNsYXZlcyIsImV4cG9ydHMiLCJob3N0IiwicHJvY2VzcyIsImVudiIsIkhPU1QiLCJkYXRhYmFzZSIsIkRBVEFCQVNFIiwidXNlciIsIlVTRVIiLCJwYXNzd29yZCIsIlBBU1NXT1JEIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHBhdHJpXFxPbmVEcml2ZVxcRG9jdW1lbnRvc1xcR2l0SHViXFxQb3J0YWZvbGlvLXRpdHVsb1xcQVBJICsgQkJERFxcQVBJIHJlY2V0YXNcXHNyY1xcIiwic291cmNlcyI6WyJjb25maWcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRvdGVudiBmcm9tIFwiZG90ZW52XCI7XHJcbmRvdGVudi5jb25maWcoKTtcclxuXHJcbmV4cG9ydCBjb25zdCBjbGF2ZXMgPXtcclxuICAgIGhvc3Q6IHByb2Nlc3MuZW52LkhPU1QgfHwgXCJcIixcclxuICAgIGRhdGFiYXNlOiBwcm9jZXNzLmVudi5EQVRBQkFTRSB8fCBcIlwiLFxyXG4gICAgdXNlcjogcHJvY2Vzcy5lbnYuVVNFUiB8fCBcIlwiLFxyXG4gICAgcGFzc3dvcmQ6IHByb2Nlc3MuZW52LlBBU1NXT1JEIHx8IFwiXCJcclxufVxyXG5cclxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxPQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFBNEIsU0FBQUQsdUJBQUFFLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxLQUFBRSxPQUFBLEVBQUFGLEdBQUE7QUFDNUJHLGVBQU0sQ0FBQ0MsTUFBTSxDQUFDLENBQUM7QUFFUixNQUFNQyxNQUFNLEdBQUFDLE9BQUEsQ0FBQUQsTUFBQSxHQUFFO0VBQ2pCRSxJQUFJLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxJQUFJLElBQUksRUFBRTtFQUM1QkMsUUFBUSxFQUFFSCxPQUFPLENBQUNDLEdBQUcsQ0FBQ0csUUFBUSxJQUFJLEVBQUU7RUFDcENDLElBQUksRUFBRUwsT0FBTyxDQUFDQyxHQUFHLENBQUNLLElBQUksSUFBSSxFQUFFO0VBQzVCQyxRQUFRLEVBQUVQLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDTyxRQUFRLElBQUk7QUFDdEMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["_dotenv","_interopRequireDefault","require","obj","__esModule","default","dotenv","config","claves","exports","host","process","env","HOST","database","DATABASE","user","USER","password","PASSWORD"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\","sources":["config.js"],"sourcesContent":["import dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nexport const claves ={\r\n    host: process.env.HOST || \"\",\r\n    database: process.env.DATABASE || \"\",\r\n    user: process.env.USER || \"\",\r\n    password: process.env.PASSWORD || \"\"\r\n}\r\n\r\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA4B,SAAAD,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAC5BG,eAAM,CAACC,MAAM,CAAC,CAAC;AAER,MAAMC,MAAM,GAAAC,OAAA,CAAAD,MAAA,GAAE;EACjBE,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI,EAAE;EAC5BC,QAAQ,EAAEH,OAAO,CAACC,GAAG,CAACG,QAAQ,IAAI,EAAE;EACpCC,IAAI,EAAEL,OAAO,CAACC,GAAG,CAACK,IAAI,IAAI,EAAE;EAC5BC,QAAQ,EAAEP,OAAO,CAACC,GAAG,CAACO,QAAQ,IAAI;AACtC,CAAC","ignoreList":[]}},"mtime":1713197622664},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\app.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\n// routes - rutas\n// import LanguageRoutes from \"./routes/language.routes\"\nconst LanguageRoutes = require('./routes/language.routes');\nconst express = require('express');\nconst morgan = require('morgan');\n// import express from \"express\";\n// import morgan from \"morgan\";\nconst app = express(); //ejecu express\nconst cors = require('cors');\n// settings\napp.set(\"port\", 3000);\n// middleware\napp.use(morgan(\"dev\"));\napp.use(cors(\n  // {origin: ['http://localhost:4200', 'http://localhost:4000']}\n));\napp.use(express.json());\n\n// routes\n// app.use(\"/listado\", LanguageRoutes)\napp.use(\"/\", LanguageRoutes);\n// app.use(\"/api/usuarios\")\n\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJMYW5ndWFnZVJvdXRlcyIsInJlcXVpcmUiLCJleHByZXNzIiwibW9yZ2FuIiwiYXBwIiwiY29ycyIsInNldCIsInVzZSIsImpzb24iLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHBhdHJpXFxPbmVEcml2ZVxcRG9jdW1lbnRvc1xcR2l0SHViXFxQb3J0YWZvbGlvLXRpdHVsb1xcQVBJICsgQkJERFxcQVBJIHJlY2V0YXNcXHNyY1xcIiwic291cmNlcyI6WyJhcHAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcm91dGVzIC0gcnV0YXNcclxuLy8gaW1wb3J0IExhbmd1YWdlUm91dGVzIGZyb20gXCIuL3JvdXRlcy9sYW5ndWFnZS5yb3V0ZXNcIlxyXG5jb25zdCBMYW5ndWFnZVJvdXRlcyA9IHJlcXVpcmUoJy4vcm91dGVzL2xhbmd1YWdlLnJvdXRlcycpO1xyXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXHJcbmNvbnN0IG1vcmdhbiA9IHJlcXVpcmUgKCdtb3JnYW4nKVxyXG4vLyBpbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xyXG4vLyBpbXBvcnQgbW9yZ2FuIGZyb20gXCJtb3JnYW5cIjtcclxuY29uc3QgYXBwPWV4cHJlc3MoKTsgLy9lamVjdSBleHByZXNzXHJcbmNvbnN0IGNvcnMgPSByZXF1aXJlKCdjb3JzJylcclxuLy8gc2V0dGluZ3NcclxuYXBwLnNldChcInBvcnRcIiwgMzAwMCk7XHJcbi8vIG1pZGRsZXdhcmVcclxuYXBwLnVzZShtb3JnYW4oXCJkZXZcIikpO1xyXG5hcHAudXNlKGNvcnMoXHJcbiAgICAvLyB7b3JpZ2luOiBbJ2h0dHA6Ly9sb2NhbGhvc3Q6NDIwMCcsICdodHRwOi8vbG9jYWxob3N0OjQwMDAnXX1cclxuKSk7XHJcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xyXG5cclxuLy8gcm91dGVzXHJcbi8vIGFwcC51c2UoXCIvbGlzdGFkb1wiLCBMYW5ndWFnZVJvdXRlcylcclxuYXBwLnVzZShcIi9cIixMYW5ndWFnZVJvdXRlcylcclxuLy8gYXBwLnVzZShcIi9hcGkvdXN1YXJpb3NcIilcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gYXBwOyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0EsTUFBTUEsY0FBYyxHQUFHQyxPQUFPLENBQUMsMEJBQTBCLENBQUM7QUFDMUQsTUFBTUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsU0FBUyxDQUFDO0FBQ2xDLE1BQU1FLE1BQU0sR0FBR0YsT0FBTyxDQUFFLFFBQVEsQ0FBQztBQUNqQztBQUNBO0FBQ0EsTUFBTUcsR0FBRyxHQUFDRixPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDckIsTUFBTUcsSUFBSSxHQUFHSixPQUFPLENBQUMsTUFBTSxDQUFDO0FBQzVCO0FBQ0FHLEdBQUcsQ0FBQ0UsR0FBRyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUM7QUFDckI7QUFDQUYsR0FBRyxDQUFDRyxHQUFHLENBQUNKLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUN0QkMsR0FBRyxDQUFDRyxHQUFHLENBQUNGLElBQUk7RUFDUjtBQUFBLENBQ0gsQ0FBQztBQUNGRCxHQUFHLENBQUNHLEdBQUcsQ0FBQ0wsT0FBTyxDQUFDTSxJQUFJLENBQUMsQ0FBQyxDQUFDOztBQUV2QjtBQUNBO0FBQ0FKLEdBQUcsQ0FBQ0csR0FBRyxDQUFDLEdBQUcsRUFBQ1AsY0FBYyxDQUFDO0FBQzNCOztBQUVBUyxNQUFNLENBQUNDLE9BQU8sR0FBR04sR0FBRyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["LanguageRoutes","require","express","morgan","app","cors","set","use","json","module","exports"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\","sources":["app.js"],"sourcesContent":["// routes - rutas\r\n// import LanguageRoutes from \"./routes/language.routes\"\r\nconst LanguageRoutes = require('./routes/language.routes');\r\nconst express = require('express')\r\nconst morgan = require ('morgan')\r\n// import express from \"express\";\r\n// import morgan from \"morgan\";\r\nconst app=express(); //ejecu express\r\nconst cors = require('cors')\r\n// settings\r\napp.set(\"port\", 3000);\r\n// middleware\r\napp.use(morgan(\"dev\"));\r\napp.use(cors(\r\n    // {origin: ['http://localhost:4200', 'http://localhost:4000']}\r\n));\r\napp.use(express.json());\r\n\r\n// routes\r\n// app.use(\"/listado\", LanguageRoutes)\r\napp.use(\"/\",LanguageRoutes)\r\n// app.use(\"/api/usuarios\")\r\n\r\nmodule.exports = app;"],"mappings":";;AAAA;AACA;AACA,MAAMA,cAAc,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AAC1D,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAClC,MAAME,MAAM,GAAGF,OAAO,CAAE,QAAQ,CAAC;AACjC;AACA;AACA,MAAMG,GAAG,GAACF,OAAO,CAAC,CAAC,CAAC,CAAC;AACrB,MAAMG,IAAI,GAAGJ,OAAO,CAAC,MAAM,CAAC;AAC5B;AACAG,GAAG,CAACE,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC;AACrB;AACAF,GAAG,CAACG,GAAG,CAACJ,MAAM,CAAC,KAAK,CAAC,CAAC;AACtBC,GAAG,CAACG,GAAG,CAACF,IAAI;EACR;AAAA,CACH,CAAC;AACFD,GAAG,CAACG,GAAG,CAACL,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC;;AAEvB;AACA;AACAJ,GAAG,CAACG,GAAG,CAAC,GAAG,EAACP,cAAc,CAAC;AAC3B;;AAEAS,MAAM,CAACC,OAAO,GAAGN,GAAG","ignoreList":[]}},"mtime":1713200201690},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\routes\\\\language.routes.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _express = require(\"express\");\nvar _recetas = require(\"../controllers/recetas.controller\");\nvar _user = require(\"../controllers/user.controller\");\n// ruta del proyecto\nconst router = (0, _express.Router)();\n// url principales | http://localhost:4000\nrouter.get(\"/\", _recetas.methods.getRecetas);\nrouter.get(\"/usuario\", _user.usermethods.getUser);\n\n// ========= RECETAS =========\n\n// METODOS GET\nrouter.get(\"/receta/:id\", _recetas.methods.getReceta); // http://localhost:4000/receta/numero\nrouter.get(\"/recetas-chile\", _recetas.methods.getRecetaCL); // http://localhost:4000/recetas-chile\nrouter.get(\"/recetas-usa\", _recetas.methods.getRecetaUSA); // http://localhost:4000/recetas-usa\nrouter.get(\"/recetas-gb\", _recetas.methods.getRecetaGB); // http://localhost:4000/recetas-gb\nrouter.get(\"/recetas-canada\", _recetas.methods.getRecetaCA); // http://localhost:4000/recetas-canada\nrouter.get(\"/recetas-es\", _recetas.methods.getRecetaES); // http://localhost:4000/recetas-es\nrouter.get(\"/recetas-mexico\", _recetas.methods.getRecetaMX); // http://localhost:4000/recetas-mexico\nrouter.get(\"/recetas-argentina\", _recetas.methods.getReceta_ARG); // http://localhost:4000/recetas-argentina\nrouter.get(\"/paises\", _recetas.methods.getPaises); // http://localhost:4000/paises\nrouter.get(\"/categorias\", _recetas.methods.getCategorias); // http://localhost:4000/categorias\nrouter.get(\"/categorias-postres\", _recetas.methods.getPostres); // http://localhost:4000/categorias-postres\nrouter.get(\"/categorias-desayuno\", _recetas.methods.getDesayuno); // http://localhost:4000/categorias-desayuno\n// METODOS POST\nrouter.post(\"/add-receta\", _recetas.methods.addReceta); // http://localhost:4000/add-receta\n// METODOS PUT\nrouter.put(\"/edit-receta/:id\", _recetas.methods.updateReceta); // http://localhost:4000/edit-receta/numero\n// METODOS DELETE\nrouter.delete(\"/delete-receta/:id\", _recetas.methods.deleteReceta); // http://localhost:4000/delete-receta/numero\n\n// ========= USUARIOS =========\n\n// METODO GET\nrouter.get(\"/\", _user.usermethods.getUser); // http://localhost:4000/usuario\nrouter.get(\"/usuarioejemplo\", _user.usermethods.ejemploUserPaginado); // http://localhost:4000/usuarioejemplo?page=1\n// METODO POST\nrouter.post(\"/usuario\"); // http://localhost:4000/usuario\n// METODO PUT\nrouter.put(\"/usuario\"); // http://localhost:4000/usuario\n// METODO DELETE\nrouter.delete(\"/usuario\"); // http://localhost:4000/usuario\nvar _default = exports.default = router;\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsInJlcXVpcmUiLCJfcmVjZXRhcyIsIl91c2VyIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVjZXRhc0NvbnRyb2xsZXIiLCJnZXRSZWNldGFzIiwidXNlckNvbnRyb2xsZXIiLCJnZXRVc2VyIiwiZ2V0UmVjZXRhIiwiZ2V0UmVjZXRhQ0wiLCJnZXRSZWNldGFVU0EiLCJnZXRSZWNldGFHQiIsImdldFJlY2V0YUNBIiwiZ2V0UmVjZXRhRVMiLCJnZXRSZWNldGFNWCIsImdldFJlY2V0YV9BUkciLCJnZXRQYWlzZXMiLCJnZXRDYXRlZ29yaWFzIiwiZ2V0UG9zdHJlcyIsImdldERlc2F5dW5vIiwicG9zdCIsImFkZFJlY2V0YSIsInB1dCIsInVwZGF0ZVJlY2V0YSIsImRlbGV0ZSIsImRlbGV0ZVJlY2V0YSIsImVqZW1wbG9Vc2VyUGFnaW5hZG8iLCJfZGVmYXVsdCIsImV4cG9ydHMiLCJkZWZhdWx0IiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHBhdHJpXFxPbmVEcml2ZVxcRG9jdW1lbnRvc1xcR2l0SHViXFxQb3J0YWZvbGlvLXRpdHVsb1xcQVBJICsgQkJERFxcQVBJIHJlY2V0YXNcXHNyY1xccm91dGVzXFwiLCJzb3VyY2VzIjpbImxhbmd1YWdlLnJvdXRlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tIFwiZXhwcmVzc1wiO1xyXG5pbXBvcnQgeyBtZXRob2RzIGFzIHJlY2V0YXNDb250cm9sbGVyIH0gZnJvbSBcIi4uL2NvbnRyb2xsZXJzL3JlY2V0YXMuY29udHJvbGxlclwiO1xyXG5pbXBvcnQgeyB1c2VybWV0aG9kcyBhcyB1c2VyQ29udHJvbGxlciB9IGZyb20gXCIuLi9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXJcIjtcclxuLy8gcnV0YSBkZWwgcHJveWVjdG9cclxuY29uc3Qgcm91dGVyPVJvdXRlcigpO1xyXG4vLyB1cmwgcHJpbmNpcGFsZXMgfCBodHRwOi8vbG9jYWxob3N0OjQwMDBcclxucm91dGVyLmdldChcIi9cIiwgcmVjZXRhc0NvbnRyb2xsZXIuZ2V0UmVjZXRhcyk7XHJcbnJvdXRlci5nZXQoXCIvdXN1YXJpb1wiLCB1c2VyQ29udHJvbGxlci5nZXRVc2VyKTtcclxuXHJcbi8vID09PT09PT09PSBSRUNFVEFTID09PT09PT09PVxyXG5cclxuLy8gTUVUT0RPUyBHRVRcclxucm91dGVyLmdldChcIi9yZWNldGEvOmlkXCIsIHJlY2V0YXNDb250cm9sbGVyLmdldFJlY2V0YSk7IC8vIGh0dHA6Ly9sb2NhbGhvc3Q6NDAwMC9yZWNldGEvbnVtZXJvXHJcbnJvdXRlci5nZXQoXCIvcmVjZXRhcy1jaGlsZVwiLHJlY2V0YXNDb250cm9sbGVyLmdldFJlY2V0YUNMKSAvLyBodHRwOi8vbG9jYWxob3N0OjQwMDAvcmVjZXRhcy1jaGlsZVxyXG5yb3V0ZXIuZ2V0KFwiL3JlY2V0YXMtdXNhXCIscmVjZXRhc0NvbnRyb2xsZXIuZ2V0UmVjZXRhVVNBKSAvLyBodHRwOi8vbG9jYWxob3N0OjQwMDAvcmVjZXRhcy11c2Fcclxucm91dGVyLmdldChcIi9yZWNldGFzLWdiXCIscmVjZXRhc0NvbnRyb2xsZXIuZ2V0UmVjZXRhR0IpIC8vIGh0dHA6Ly9sb2NhbGhvc3Q6NDAwMC9yZWNldGFzLWdiXHJcbnJvdXRlci5nZXQoXCIvcmVjZXRhcy1jYW5hZGFcIixyZWNldGFzQ29udHJvbGxlci5nZXRSZWNldGFDQSkgLy8gaHR0cDovL2xvY2FsaG9zdDo0MDAwL3JlY2V0YXMtY2FuYWRhXHJcbnJvdXRlci5nZXQoXCIvcmVjZXRhcy1lc1wiLHJlY2V0YXNDb250cm9sbGVyLmdldFJlY2V0YUVTKSAvLyBodHRwOi8vbG9jYWxob3N0OjQwMDAvcmVjZXRhcy1lc1xyXG5yb3V0ZXIuZ2V0KFwiL3JlY2V0YXMtbWV4aWNvXCIscmVjZXRhc0NvbnRyb2xsZXIuZ2V0UmVjZXRhTVgpIC8vIGh0dHA6Ly9sb2NhbGhvc3Q6NDAwMC9yZWNldGFzLW1leGljb1xyXG5yb3V0ZXIuZ2V0KFwiL3JlY2V0YXMtYXJnZW50aW5hXCIscmVjZXRhc0NvbnRyb2xsZXIuZ2V0UmVjZXRhX0FSRykgLy8gaHR0cDovL2xvY2FsaG9zdDo0MDAwL3JlY2V0YXMtYXJnZW50aW5hXHJcbnJvdXRlci5nZXQoXCIvcGFpc2VzXCIscmVjZXRhc0NvbnRyb2xsZXIuZ2V0UGFpc2VzKSAvLyBodHRwOi8vbG9jYWxob3N0OjQwMDAvcGFpc2VzXHJcbnJvdXRlci5nZXQoXCIvY2F0ZWdvcmlhc1wiLHJlY2V0YXNDb250cm9sbGVyLmdldENhdGVnb3JpYXMpIC8vIGh0dHA6Ly9sb2NhbGhvc3Q6NDAwMC9jYXRlZ29yaWFzXHJcbnJvdXRlci5nZXQoXCIvY2F0ZWdvcmlhcy1wb3N0cmVzXCIscmVjZXRhc0NvbnRyb2xsZXIuZ2V0UG9zdHJlcykgLy8gaHR0cDovL2xvY2FsaG9zdDo0MDAwL2NhdGVnb3JpYXMtcG9zdHJlc1xyXG5yb3V0ZXIuZ2V0KFwiL2NhdGVnb3JpYXMtZGVzYXl1bm9cIixyZWNldGFzQ29udHJvbGxlci5nZXREZXNheXVubykgLy8gaHR0cDovL2xvY2FsaG9zdDo0MDAwL2NhdGVnb3JpYXMtZGVzYXl1bm9cclxuLy8gTUVUT0RPUyBQT1NUXHJcbnJvdXRlci5wb3N0KFwiL2FkZC1yZWNldGFcIiwgcmVjZXRhc0NvbnRyb2xsZXIuYWRkUmVjZXRhKTsgLy8gaHR0cDovL2xvY2FsaG9zdDo0MDAwL2FkZC1yZWNldGFcclxuLy8gTUVUT0RPUyBQVVRcclxucm91dGVyLnB1dChcIi9lZGl0LXJlY2V0YS86aWRcIiwgcmVjZXRhc0NvbnRyb2xsZXIudXBkYXRlUmVjZXRhKTsgLy8gaHR0cDovL2xvY2FsaG9zdDo0MDAwL2VkaXQtcmVjZXRhL251bWVyb1xyXG4vLyBNRVRPRE9TIERFTEVURVxyXG5yb3V0ZXIuZGVsZXRlKFwiL2RlbGV0ZS1yZWNldGEvOmlkXCIsIHJlY2V0YXNDb250cm9sbGVyLmRlbGV0ZVJlY2V0YSk7IC8vIGh0dHA6Ly9sb2NhbGhvc3Q6NDAwMC9kZWxldGUtcmVjZXRhL251bWVyb1xyXG5cclxuXHJcbi8vID09PT09PT09PSBVU1VBUklPUyA9PT09PT09PT1cclxuXHJcbi8vIE1FVE9ETyBHRVRcclxucm91dGVyLmdldChcIi9cIiwgdXNlckNvbnRyb2xsZXIuZ2V0VXNlcik7IC8vIGh0dHA6Ly9sb2NhbGhvc3Q6NDAwMC91c3VhcmlvXHJcbnJvdXRlci5nZXQoXCIvdXN1YXJpb2VqZW1wbG9cIiwgdXNlckNvbnRyb2xsZXIuZWplbXBsb1VzZXJQYWdpbmFkbyk7IC8vIGh0dHA6Ly9sb2NhbGhvc3Q6NDAwMC91c3VhcmlvZWplbXBsbz9wYWdlPTFcclxuLy8gTUVUT0RPIFBPU1Rcclxucm91dGVyLnBvc3QoXCIvdXN1YXJpb1wiKTsgLy8gaHR0cDovL2xvY2FsaG9zdDo0MDAwL3VzdWFyaW9cclxuLy8gTUVUT0RPIFBVVFxyXG5yb3V0ZXIucHV0KFwiL3VzdWFyaW9cIik7IC8vIGh0dHA6Ly9sb2NhbGhvc3Q6NDAwMC91c3VhcmlvXHJcbi8vIE1FVE9ETyBERUxFVEVcclxucm91dGVyLmRlbGV0ZShcIi91c3VhcmlvXCIpOyAvLyBodHRwOi8vbG9jYWxob3N0OjQwMDAvdXN1YXJpb1xyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxRQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxRQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxLQUFBLEdBQUFGLE9BQUE7QUFDQTtBQUNBLE1BQU1HLE1BQU0sR0FBQyxJQUFBQyxlQUFNLEVBQUMsQ0FBQztBQUNyQjtBQUNBRCxNQUFNLENBQUNFLEdBQUcsQ0FBQyxHQUFHLEVBQUVDLGdCQUFpQixDQUFDQyxVQUFVLENBQUM7QUFDN0NKLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLFVBQVUsRUFBRUcsaUJBQWMsQ0FBQ0MsT0FBTyxDQUFDOztBQUU5Qzs7QUFFQTtBQUNBTixNQUFNLENBQUNFLEdBQUcsQ0FBQyxhQUFhLEVBQUVDLGdCQUFpQixDQUFDSSxTQUFTLENBQUMsQ0FBQyxDQUFDO0FBQ3hEUCxNQUFNLENBQUNFLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBQ0MsZ0JBQWlCLENBQUNLLFdBQVcsQ0FBQyxFQUFDO0FBQzNEUixNQUFNLENBQUNFLEdBQUcsQ0FBQyxjQUFjLEVBQUNDLGdCQUFpQixDQUFDTSxZQUFZLENBQUMsRUFBQztBQUMxRFQsTUFBTSxDQUFDRSxHQUFHLENBQUMsYUFBYSxFQUFDQyxnQkFBaUIsQ0FBQ08sV0FBVyxDQUFDLEVBQUM7QUFDeERWLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLGlCQUFpQixFQUFDQyxnQkFBaUIsQ0FBQ1EsV0FBVyxDQUFDLEVBQUM7QUFDNURYLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLGFBQWEsRUFBQ0MsZ0JBQWlCLENBQUNTLFdBQVcsQ0FBQyxFQUFDO0FBQ3hEWixNQUFNLENBQUNFLEdBQUcsQ0FBQyxpQkFBaUIsRUFBQ0MsZ0JBQWlCLENBQUNVLFdBQVcsQ0FBQyxFQUFDO0FBQzVEYixNQUFNLENBQUNFLEdBQUcsQ0FBQyxvQkFBb0IsRUFBQ0MsZ0JBQWlCLENBQUNXLGFBQWEsQ0FBQyxFQUFDO0FBQ2pFZCxNQUFNLENBQUNFLEdBQUcsQ0FBQyxTQUFTLEVBQUNDLGdCQUFpQixDQUFDWSxTQUFTLENBQUMsRUFBQztBQUNsRGYsTUFBTSxDQUFDRSxHQUFHLENBQUMsYUFBYSxFQUFDQyxnQkFBaUIsQ0FBQ2EsYUFBYSxDQUFDLEVBQUM7QUFDMURoQixNQUFNLENBQUNFLEdBQUcsQ0FBQyxxQkFBcUIsRUFBQ0MsZ0JBQWlCLENBQUNjLFVBQVUsQ0FBQyxFQUFDO0FBQy9EakIsTUFBTSxDQUFDRSxHQUFHLENBQUMsc0JBQXNCLEVBQUNDLGdCQUFpQixDQUFDZSxXQUFXLENBQUMsRUFBQztBQUNqRTtBQUNBbEIsTUFBTSxDQUFDbUIsSUFBSSxDQUFDLGFBQWEsRUFBRWhCLGdCQUFpQixDQUFDaUIsU0FBUyxDQUFDLENBQUMsQ0FBQztBQUN6RDtBQUNBcEIsTUFBTSxDQUFDcUIsR0FBRyxDQUFDLGtCQUFrQixFQUFFbEIsZ0JBQWlCLENBQUNtQixZQUFZLENBQUMsQ0FBQyxDQUFDO0FBQ2hFO0FBQ0F0QixNQUFNLENBQUN1QixNQUFNLENBQUMsb0JBQW9CLEVBQUVwQixnQkFBaUIsQ0FBQ3FCLFlBQVksQ0FBQyxDQUFDLENBQUM7O0FBR3JFOztBQUVBO0FBQ0F4QixNQUFNLENBQUNFLEdBQUcsQ0FBQyxHQUFHLEVBQUVHLGlCQUFjLENBQUNDLE9BQU8sQ0FBQyxDQUFDLENBQUM7QUFDekNOLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLGlCQUFpQixFQUFFRyxpQkFBYyxDQUFDb0IsbUJBQW1CLENBQUMsQ0FBQyxDQUFDO0FBQ25FO0FBQ0F6QixNQUFNLENBQUNtQixJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztBQUN6QjtBQUNBbkIsTUFBTSxDQUFDcUIsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7QUFDeEI7QUFDQXJCLE1BQU0sQ0FBQ3VCLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO0FBQUEsSUFBQUcsUUFBQSxHQUFBQyxPQUFBLENBQUFDLE9BQUEsR0FHWjVCLE1BQU07QUFFckI2QixNQUFNLENBQUNGLE9BQU8sR0FBRzNCLE1BQU0iLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["_express","require","_recetas","_user","router","Router","get","recetasController","getRecetas","userController","getUser","getReceta","getRecetaCL","getRecetaUSA","getRecetaGB","getRecetaCA","getRecetaES","getRecetaMX","getReceta_ARG","getPaises","getCategorias","getPostres","getDesayuno","post","addReceta","put","updateReceta","delete","deleteReceta","ejemploUserPaginado","_default","exports","default","module"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\routes\\","sources":["language.routes.js"],"sourcesContent":["import { Router } from \"express\";\r\nimport { methods as recetasController } from \"../controllers/recetas.controller\";\r\nimport { usermethods as userController } from \"../controllers/user.controller\";\r\n// ruta del proyecto\r\nconst router=Router();\r\n// url principales | http://localhost:4000\r\nrouter.get(\"/\", recetasController.getRecetas);\r\nrouter.get(\"/usuario\", userController.getUser);\r\n\r\n// ========= RECETAS =========\r\n\r\n// METODOS GET\r\nrouter.get(\"/receta/:id\", recetasController.getReceta); // http://localhost:4000/receta/numero\r\nrouter.get(\"/recetas-chile\",recetasController.getRecetaCL) // http://localhost:4000/recetas-chile\r\nrouter.get(\"/recetas-usa\",recetasController.getRecetaUSA) // http://localhost:4000/recetas-usa\r\nrouter.get(\"/recetas-gb\",recetasController.getRecetaGB) // http://localhost:4000/recetas-gb\r\nrouter.get(\"/recetas-canada\",recetasController.getRecetaCA) // http://localhost:4000/recetas-canada\r\nrouter.get(\"/recetas-es\",recetasController.getRecetaES) // http://localhost:4000/recetas-es\r\nrouter.get(\"/recetas-mexico\",recetasController.getRecetaMX) // http://localhost:4000/recetas-mexico\r\nrouter.get(\"/recetas-argentina\",recetasController.getReceta_ARG) // http://localhost:4000/recetas-argentina\r\nrouter.get(\"/paises\",recetasController.getPaises) // http://localhost:4000/paises\r\nrouter.get(\"/categorias\",recetasController.getCategorias) // http://localhost:4000/categorias\r\nrouter.get(\"/categorias-postres\",recetasController.getPostres) // http://localhost:4000/categorias-postres\r\nrouter.get(\"/categorias-desayuno\",recetasController.getDesayuno) // http://localhost:4000/categorias-desayuno\r\n// METODOS POST\r\nrouter.post(\"/add-receta\", recetasController.addReceta); // http://localhost:4000/add-receta\r\n// METODOS PUT\r\nrouter.put(\"/edit-receta/:id\", recetasController.updateReceta); // http://localhost:4000/edit-receta/numero\r\n// METODOS DELETE\r\nrouter.delete(\"/delete-receta/:id\", recetasController.deleteReceta); // http://localhost:4000/delete-receta/numero\r\n\r\n\r\n// ========= USUARIOS =========\r\n\r\n// METODO GET\r\nrouter.get(\"/\", userController.getUser); // http://localhost:4000/usuario\r\nrouter.get(\"/usuarioejemplo\", userController.ejemploUserPaginado); // http://localhost:4000/usuarioejemplo?page=1\r\n// METODO POST\r\nrouter.post(\"/usuario\"); // http://localhost:4000/usuario\r\n// METODO PUT\r\nrouter.put(\"/usuario\"); // http://localhost:4000/usuario\r\n// METODO DELETE\r\nrouter.delete(\"/usuario\"); // http://localhost:4000/usuario\r\n\r\n\r\nexport default router;\r\n\r\nmodule.exports = router"],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,QAAA,GAAAD,OAAA;AACA,IAAAE,KAAA,GAAAF,OAAA;AACA;AACA,MAAMG,MAAM,GAAC,IAAAC,eAAM,EAAC,CAAC;AACrB;AACAD,MAAM,CAACE,GAAG,CAAC,GAAG,EAAEC,gBAAiB,CAACC,UAAU,CAAC;AAC7CJ,MAAM,CAACE,GAAG,CAAC,UAAU,EAAEG,iBAAc,CAACC,OAAO,CAAC;;AAE9C;;AAEA;AACAN,MAAM,CAACE,GAAG,CAAC,aAAa,EAAEC,gBAAiB,CAACI,SAAS,CAAC,CAAC,CAAC;AACxDP,MAAM,CAACE,GAAG,CAAC,gBAAgB,EAACC,gBAAiB,CAACK,WAAW,CAAC,EAAC;AAC3DR,MAAM,CAACE,GAAG,CAAC,cAAc,EAACC,gBAAiB,CAACM,YAAY,CAAC,EAAC;AAC1DT,MAAM,CAACE,GAAG,CAAC,aAAa,EAACC,gBAAiB,CAACO,WAAW,CAAC,EAAC;AACxDV,MAAM,CAACE,GAAG,CAAC,iBAAiB,EAACC,gBAAiB,CAACQ,WAAW,CAAC,EAAC;AAC5DX,MAAM,CAACE,GAAG,CAAC,aAAa,EAACC,gBAAiB,CAACS,WAAW,CAAC,EAAC;AACxDZ,MAAM,CAACE,GAAG,CAAC,iBAAiB,EAACC,gBAAiB,CAACU,WAAW,CAAC,EAAC;AAC5Db,MAAM,CAACE,GAAG,CAAC,oBAAoB,EAACC,gBAAiB,CAACW,aAAa,CAAC,EAAC;AACjEd,MAAM,CAACE,GAAG,CAAC,SAAS,EAACC,gBAAiB,CAACY,SAAS,CAAC,EAAC;AAClDf,MAAM,CAACE,GAAG,CAAC,aAAa,EAACC,gBAAiB,CAACa,aAAa,CAAC,EAAC;AAC1DhB,MAAM,CAACE,GAAG,CAAC,qBAAqB,EAACC,gBAAiB,CAACc,UAAU,CAAC,EAAC;AAC/DjB,MAAM,CAACE,GAAG,CAAC,sBAAsB,EAACC,gBAAiB,CAACe,WAAW,CAAC,EAAC;AACjE;AACAlB,MAAM,CAACmB,IAAI,CAAC,aAAa,EAAEhB,gBAAiB,CAACiB,SAAS,CAAC,CAAC,CAAC;AACzD;AACApB,MAAM,CAACqB,GAAG,CAAC,kBAAkB,EAAElB,gBAAiB,CAACmB,YAAY,CAAC,CAAC,CAAC;AAChE;AACAtB,MAAM,CAACuB,MAAM,CAAC,oBAAoB,EAAEpB,gBAAiB,CAACqB,YAAY,CAAC,CAAC,CAAC;;AAGrE;;AAEA;AACAxB,MAAM,CAACE,GAAG,CAAC,GAAG,EAAEG,iBAAc,CAACC,OAAO,CAAC,CAAC,CAAC;AACzCN,MAAM,CAACE,GAAG,CAAC,iBAAiB,EAAEG,iBAAc,CAACoB,mBAAmB,CAAC,CAAC,CAAC;AACnE;AACAzB,MAAM,CAACmB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AACzB;AACAnB,MAAM,CAACqB,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;AACxB;AACArB,MAAM,CAACuB,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;AAAA,IAAAG,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGZ5B,MAAM;AAErB6B,MAAM,CAACF,OAAO,GAAG3B,MAAM","ignoreList":[]}},"mtime":1713199549760},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\controllers\\\\language.controller.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.methods = void 0;\nvar _database = require(\"./../database/database\");\n// PARA OBTENER LOS RESULTADOS\nconst getRecetas = async (req, res) => {\n  try {\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n        recetas_del_mundo.id_receta, \n        recetas_del_mundo.nombre_receta, \n        recetas_del_mundo.ingrediente_receta, \n        recetas_del_mundo.Año, \n        recetas_del_mundo.pais_receta, \n        recetas_del_mundo.preparacion_receta, \n        recetas_del_mundo.fecha_creacion, \n        recetas_del_mundo.url_imagen_receta, \n        recetas_del_mundo.categoria,\n        usuarios.nombres as \"creado_por\" \n        FROM recetas_del_mundo\n        INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user;`);\n\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      console.log(\"No hay más resultados disponibles.\");\n      return res.status(404).json({\n        message: \"No hay más resultados disponibles.\"\n      });\n    }\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENER LOS RESULTADOS\nconst getPaises = async (req, res) => {\n  try {\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT DISTINCT pais_receta FROM recetas_del_mundo;`);\n\n    // Verificar si hay resultados\n    // if (result.length === 0) {\n    //     console.log(\"No hay más resultados disponibles.\");\n    //     return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\n    // }\n    console.log(result); // Este es el mensaje que se desplegará en la consola\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENER LOS RESULTADOS\nconst getCategorias = async (req, res) => {\n  try {\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT DISTINCT categoria FROM recetas_del_mundo;`);\n\n    // Verificar si hay resultados\n    // if (result.length === 0) {\n    //     console.log(\"No hay más resultados disponibles.\");\n    //     return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\n    // }\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENERLOS POR id\nconst getReceta = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.categoria,\n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.id_receta=?`, id);\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA AÑADIR ELEMENTOS\nconst addReceta = async (req, res) => {\n  try {\n    const {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      preparacion_receta,\n      categoria,\n      id_user\n    } = req.body;\n\n    // if (nombre_receta == undefined || ingrediente_receta == undefined) {\n    //     return res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\n    // }\n\n    const receta = {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      preparacion_receta,\n      categoria,\n      id_user\n    };\n    const connection = await (0, _database.getConnection)();\n    await connection.query(\"INSERT INTO recetas_del_mundo SET ?\", receta);\n    res.json({\n      message: \"Receta añadida exitosamente\"\n    });\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA ELIMINAR ELEMENTOS\nconst deleteReceta = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"DELETE FROM recetas_del_mundo WHERE id_receta = ?;\", id);\n    if (result.affectedRows > 0) {\n      // Elemento borrado exitosamente\n      res.json({\n        message: `Elemento con ID ${id} borrado exitosamente.`\n      });\n    } else {\n      // No se encontró ningún elemento con el ID proporcionado\n      res.status(404).json({\n        message: `No se encontró ningún elemento con el ID ${id}.`\n      });\n    }\n  } catch (error) {\n    // Error en la solicitud\n    res.status(500).send(error.message);\n  }\n};\n\n// PARA ACTUALIZAR ELEMENTOS\nconst updateReceta = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      categoria,\n      preparacion_receta,\n      id_user\n    } = req.body;\n    if (nombre_receta == undefined || ingrediente_receta == undefined) {\n      return res.status(400).json({\n        message: \"Bad Request, Por favor, completar los datos.\"\n      });\n    }\n    const receta = {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      categoria,\n      preparacion_receta,\n      id_user\n    };\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"UPDATE recetas_del_mundo SET ? WHERE id_receta = ?;\", [receta, id]);\n\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// ============================DESGLOSE POR PAISES ========================================\n// LISTADO:\n// Chile || Estados Unidos || Gran Bretaña || Canada || España || Mexico || Argentina\n\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaCL = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='chile';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENERLOS POR pais = Estados Unidos\nconst getRecetaUSA = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta = 'Estados Unidos';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = Gran Bretaña\nconst getRecetaGB = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Gran Bretaña';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaCA = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Canada';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaES = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='españa';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaMX = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Mexico';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getReceta_ARG = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Argentina';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// =====================================================================\n// GESTION DE CATEGORIAS COMO POSTRES, ETC\n// =====================================================================\n\n// seleccionar postres\nconst getPostres = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            recetas_del_mundo.categoria, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.categoria='postres';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// seleccionar desayunos\nconst getDesayuno = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            recetas_del_mundo.categoria, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.categoria='desayuno';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// =======================================================================\n//    ===================== GESTIÓN DE USUARIOS ========================\n// =======================================================================\nconst getUser = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"SELECT id_user,nombres,user,fecha_creacion FROM usuarios\");\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\nconst ejemploUserPaginado = async (req, res) => {\n  try {\n    const {\n      page\n    } = req.query; // Obtener el número de página de la consulta\n    const itemsPerPage = 10; // Número de resultados por página\n\n    // Calcular el offset basado en la página actual\n    const offset = (page - 1) * itemsPerPage;\n    const connection = await (0, _database.getConnection)();\n\n    // Consulta SQL con LIMIT y OFFSET para la paginación\n    const result = await connection.query(`SELECT id_user, nombres, user, fecha_creacion FROM usuarios LIMIT ${itemsPerPage} OFFSET ${offset}`);\n\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"No hay más resultados disponibles.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500).send(error.message);\n  }\n};\n\n// PARA AÑADIR USUARIOS\nconst addUsuario = async (req, res) => {\n  try {\n    const {\n      nombres,\n      user,\n      password,\n      fecha_creacion\n    } = req.body;\n    // console.log(banda)\n    // console.log(disco)\n    if (nombres == undefined || user == undefined) {\n      res.status(400).json({\n        message: \"Bad Request, Por favor, completa los datos.\"\n      });\n    }\n    const usuarionuevo = {\n      nombres,\n      user,\n      password,\n      fecha_creacion\n    };\n    const connection = await (0, _database.getConnection)();\n    await connection.query(\"INSERT INTO usuarios SET ?\", usuarionuevo);\n    res.json({\n      message: `Usuario ${user} añadido exitosamente`\n    });\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA ACTUALIZAR USUARIOS\nconst updateUsuario = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const {\n      nombres,\n      user,\n      password\n    } = req.body;\n    if (user === undefined) {\n      return res.status(400).json({\n        message: \"Bad Request, Por favor, completar los datos.\"\n      });\n    }\n    const usuarioupdate = {\n      nombres,\n      user,\n      password\n    };\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"UPDATE usuarios SET ? WHERE id_user = ?;\", [usuarioupdate, id]);\n    res.json({\n      message: `Usuario ${user} Editado exitosamente`\n    });\n    // console.log(result);\n    // res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA ELIMINAR ELEMENTOS\nconst deleteUsuario = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"DELETE FROM usuarios WHERE id_user = ?;\", id);\n    if (result.affectedRows > 0) {\n      // Elemento borrado exitosamente\n      res.json({\n        message: `Usuario con ID ${id} borrado exitosamente.`\n      });\n    } else {\n      // No se encontró ningún elemento con el ID proporcionado\n      res.status(404).json({\n        message: `No se encontró ningún usuario con el ID ${id}.`\n      });\n    }\n  } catch (error) {\n    // Error en la solicitud\n    res.status(500).send(error.message);\n  }\n};\nconst methods = exports.methods = {\n  // GET \n  getRecetas,\n  getReceta,\n  getRecetaCL,\n  getRecetaUSA,\n  getRecetaGB,\n  getRecetaCA,\n  getRecetaES,\n  getRecetaMX,\n  getReceta_ARG,\n  getPaises,\n  // CATEGORIAS\n  getCategorias,\n  getPostres,\n  getDesayuno,\n  // POST\n  addReceta,\n  // PUT\n  updateReceta,\n  // DELETE\n  deleteReceta,\n  // gestión usuarios\n  getUser,\n  ejemploUserPaginado,\n  addUsuario,\n  updateUsuario,\n  deleteUsuario\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_database","require","getRecetas","req","res","connection","getConnection","result","query","length","console","log","status","json","message","error","send","getPaises","getCategorias","getReceta","params","id","addReceta","nombre_receta","ingrediente_receta","pais_receta","preparacion_receta","categoria","id_user","body","receta","deleteReceta","affectedRows","updateReceta","undefined","getRecetaCL","getRecetaUSA","getRecetaGB","getRecetaCA","getRecetaES","getRecetaMX","getReceta_ARG","getPostres","getDesayuno","getUser","ejemploUserPaginado","page","itemsPerPage","offset","addUsuario","nombres","user","password","fecha_creacion","usuarionuevo","updateUsuario","usuarioupdate","deleteUsuario","methods","exports"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\controllers\\","sources":["language.controller.js"],"sourcesContent":["import { getConnection } from \"./../database/database\"\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getRecetas = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n        `SELECT  \r\n        recetas_del_mundo.id_receta, \r\n        recetas_del_mundo.nombre_receta, \r\n        recetas_del_mundo.ingrediente_receta, \r\n        recetas_del_mundo.Año, \r\n        recetas_del_mundo.pais_receta, \r\n        recetas_del_mundo.preparacion_receta, \r\n        recetas_del_mundo.fecha_creacion, \r\n        recetas_del_mundo.url_imagen_receta, \r\n        recetas_del_mundo.categoria,\r\n        usuarios.nombres as \"creado_por\" \r\n        FROM recetas_del_mundo\r\n        INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user;`);\r\n        \r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            console.log(\"No hay más resultados disponibles.\");\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getPaises = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n        `SELECT DISTINCT pais_receta FROM recetas_del_mundo;`);\r\n        \r\n        // Verificar si hay resultados\r\n        // if (result.length === 0) {\r\n        //     console.log(\"No hay más resultados disponibles.\");\r\n        //     return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        // }\r\n        console.log(result); // Este es el mensaje que se desplegará en la consola\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getCategorias = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n        `SELECT DISTINCT categoria FROM recetas_del_mundo;`);\r\n        \r\n        // Verificar si hay resultados\r\n        // if (result.length === 0) {\r\n        //     console.log(\"No hay más resultados disponibles.\");\r\n        //     return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        // }\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENERLOS POR id\r\nconst getReceta = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.categoria,\r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.id_receta=?`, id);\r\n        // console.log(result);\r\n         // Verificar si hay resultados\r\n         if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n\r\n// PARA AÑADIR ELEMENTOS\r\nconst addReceta = async (req, res) => {\r\n\r\n    try {\r\n        const {nombre_receta, ingrediente_receta, pais_receta, preparacion_receta, categoria, id_user} = req.body;\r\n\r\n        // if (nombre_receta == undefined || ingrediente_receta == undefined) {\r\n        //     return res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\r\n        // }\r\n\r\n        const receta = {\r\n            nombre_receta, ingrediente_receta, pais_receta, preparacion_receta, categoria, id_user\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        await connection.query(\"INSERT INTO recetas_del_mundo SET ?\", receta);\r\n        res.json({ message: \"Receta añadida exitosamente\" })\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA ELIMINAR ELEMENTOS\r\nconst deleteReceta = async (req, res) => {\r\n    try {\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"DELETE FROM recetas_del_mundo WHERE id_receta = ?;\", id);\r\n\r\n        if (result.affectedRows > 0) {\r\n            // Elemento borrado exitosamente\r\n            res.json({ message: `Elemento con ID ${id} borrado exitosamente.` });\r\n        } else {\r\n            // No se encontró ningún elemento con el ID proporcionado\r\n            res.status(404).json({ message: `No se encontró ningún elemento con el ID ${id}.` });\r\n        }\r\n    } catch (error) {\r\n        // Error en la solicitud\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n// PARA ACTUALIZAR ELEMENTOS\r\nconst updateReceta = async (req, res) => {\r\n\r\n    try {\r\n        const { id } = req.params;\r\n        const { nombre_receta, ingrediente_receta, pais_receta, categoria, preparacion_receta, id_user } = req.body;\r\n        if (nombre_receta == undefined || ingrediente_receta == undefined) {\r\n            return res.status(400).json({ message: \"Bad Request, Por favor, completar los datos.\" })\r\n        }\r\n        const receta = {\r\n            nombre_receta, ingrediente_receta, pais_receta, categoria, preparacion_receta, id_user\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"UPDATE recetas_del_mundo SET ? WHERE id_receta = ?;\",[receta,id]);\r\n        \r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// ============================DESGLOSE POR PAISES ========================================\r\n// LISTADO:\r\n// Chile || Estados Unidos || Gran Bretaña || Canada || España || Mexico || Argentina\r\n    \r\n\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaCL = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='chile';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENERLOS POR pais = Estados Unidos\r\nconst getRecetaUSA = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta = 'Estados Unidos';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = Gran Bretaña\r\nconst getRecetaGB = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Gran Bretaña';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaCA = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Canada';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaES = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='españa';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaMX = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Mexico';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getReceta_ARG = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Argentina';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// =====================================================================\r\n                        // GESTION DE CATEGORIAS COMO POSTRES, ETC\r\n// =====================================================================\r\n\r\n\r\n// seleccionar postres\r\nconst getPostres = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            recetas_del_mundo.categoria, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.categoria='postres';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// seleccionar desayunos\r\nconst getDesayuno = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            recetas_del_mundo.categoria, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.categoria='desayuno';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// =======================================================================\r\n//    ===================== GESTIÓN DE USUARIOS ========================\r\n// =======================================================================\r\nconst getUser = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"SELECT id_user,nombres,user,fecha_creacion FROM usuarios\");\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\nconst ejemploUserPaginado = async (req, res) => {\r\n    try {\r\n        const { page } = req.query; // Obtener el número de página de la consulta\r\n        const itemsPerPage = 10; // Número de resultados por página\r\n\r\n        // Calcular el offset basado en la página actual\r\n        const offset = (page - 1) * itemsPerPage;\r\n\r\n        const connection = await getConnection();\r\n\r\n        // Consulta SQL con LIMIT y OFFSET para la paginación\r\n        const result = await connection.query(\r\n            `SELECT id_user, nombres, user, fecha_creacion FROM usuarios LIMIT ${itemsPerPage} OFFSET ${offset}`\r\n        );\r\n\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA AÑADIR USUARIOS\r\nconst addUsuario = async (req, res) => {\r\n\r\n    try {\r\n        const { nombres, user, password, fecha_creacion } = req.body;\r\n        // console.log(banda)\r\n        // console.log(disco)\r\n        if (nombres == undefined || user == undefined) {\r\n            res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\r\n        }\r\n        const usuarionuevo = {\r\n            nombres, user, password, fecha_creacion\r\n        }\r\n        const connection = await getConnection();\r\n        await connection.query(\"INSERT INTO usuarios SET ?\", usuarionuevo);\r\n        res.json({ message: `Usuario ${user} añadido exitosamente`})\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA ACTUALIZAR USUARIOS\r\nconst updateUsuario = async (req, res) => {\r\n\r\n    try {\r\n        const { id } = req.params;\r\n        const { nombres, user, password, } = req.body;\r\n        if (user === undefined) {\r\n            return res.status(400).json({ message: \"Bad Request, Por favor, completar los datos.\" })\r\n        }\r\n        const usuarioupdate = {\r\n            nombres, user, password,\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"UPDATE usuarios SET ? WHERE id_user = ?;\",[usuarioupdate,id]);\r\n        res.json( { message: `Usuario ${user} Editado exitosamente`})\r\n        // console.log(result);\r\n        // res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA ELIMINAR ELEMENTOS\r\nconst deleteUsuario = async (req, res) => {\r\n    try {\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"DELETE FROM usuarios WHERE id_user = ?;\", id);\r\n\r\n        if (result.affectedRows > 0) {\r\n            // Elemento borrado exitosamente\r\n            res.json({ message: `Usuario con ID ${id} borrado exitosamente.` });\r\n        } else {\r\n            // No se encontró ningún elemento con el ID proporcionado\r\n            res.status(404).json({ message: `No se encontró ningún usuario con el ID ${id}.` });\r\n        }\r\n    } catch (error) {\r\n        // Error en la solicitud\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n\r\nexport const methods = {\r\n    // GET \r\n    getRecetas, getReceta, getRecetaCL, getRecetaUSA, getRecetaGB, getRecetaCA, getRecetaES, getRecetaMX, getReceta_ARG, getPaises,\r\n    // CATEGORIAS\r\n     getCategorias, getPostres, getDesayuno,\r\n    // POST\r\n    addReceta,\r\n    // PUT\r\n    updateReceta,\r\n    // DELETE\r\n    deleteReceta,\r\n    // gestión usuarios\r\n    getUser, ejemploUserPaginado, addUsuario, updateUsuario, deleteUsuario,\r\n    \r\n};\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1713150854296},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\database\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\database\\\\database.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nvar _promiseMysql = _interopRequireDefault(require(\"promise-mysql\"));\nvar _config = require(\"./../config\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst connection = _promiseMysql.default.createConnection({\n  host: _config.claves.host,\n  database: _config.claves.database,\n  user: _config.claves.user,\n  password: _config.claves.password\n});\nconst getConnection = () => {\n  return connection;\n};\nmodule.exports = {\n  getConnection\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcHJvbWlzZU15c3FsIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfY29uZmlnIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJjb25uZWN0aW9uIiwibXlzcWwiLCJjcmVhdGVDb25uZWN0aW9uIiwiaG9zdCIsImNsYXZlcyIsImRhdGFiYXNlIiwidXNlciIsInBhc3N3b3JkIiwiZ2V0Q29ubmVjdGlvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xccGF0cmlcXE9uZURyaXZlXFxEb2N1bWVudG9zXFxHaXRIdWJcXFBvcnRhZm9saW8tdGl0dWxvXFxBUEkgKyBCQkREXFxBUEkgcmVjZXRhc1xcc3JjXFxkYXRhYmFzZVxcIiwic291cmNlcyI6WyJkYXRhYmFzZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbXlzcWwgZnJvbSBcInByb21pc2UtbXlzcWxcIjtcclxuaW1wb3J0IHsgY2xhdmVzIH0gZnJvbSBcIi4vLi4vY29uZmlnXCI7XHJcblxyXG5jb25zdCBjb25uZWN0aW9uID0gbXlzcWwuY3JlYXRlQ29ubmVjdGlvbih7XHJcbiAgICBob3N0OiBjbGF2ZXMuaG9zdCxcclxuICAgIGRhdGFiYXNlOiBjbGF2ZXMuZGF0YWJhc2UsXHJcbiAgICB1c2VyOiBjbGF2ZXMudXNlcixcclxuICAgIHBhc3N3b3JkOiBjbGF2ZXMucGFzc3dvcmRcclxufSk7XHJcblxyXG5jb25zdCBnZXRDb25uZWN0aW9uID0gKCkgPT4ge1xyXG4gICAgcmV0dXJuIGNvbm5lY3Rpb247XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgZ2V0Q29ubmVjdGlvblxyXG59XHJcbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFBQSxhQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxPQUFBLEdBQUFELE9BQUE7QUFBcUMsU0FBQUQsdUJBQUFHLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxLQUFBRSxPQUFBLEVBQUFGLEdBQUE7QUFFckMsTUFBTUcsVUFBVSxHQUFHQyxxQkFBSyxDQUFDQyxnQkFBZ0IsQ0FBQztFQUN0Q0MsSUFBSSxFQUFFQyxjQUFNLENBQUNELElBQUk7RUFDakJFLFFBQVEsRUFBRUQsY0FBTSxDQUFDQyxRQUFRO0VBQ3pCQyxJQUFJLEVBQUVGLGNBQU0sQ0FBQ0UsSUFBSTtFQUNqQkMsUUFBUSxFQUFFSCxjQUFNLENBQUNHO0FBQ3JCLENBQUMsQ0FBQztBQUVGLE1BQU1DLGFBQWEsR0FBR0EsQ0FBQSxLQUFNO0VBQ3hCLE9BQU9SLFVBQVU7QUFDckIsQ0FBQztBQUVEUyxNQUFNLENBQUNDLE9BQU8sR0FBRztFQUNiRjtBQUNKLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["_promiseMysql","_interopRequireDefault","require","_config","obj","__esModule","default","connection","mysql","createConnection","host","claves","database","user","password","getConnection","module","exports"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\database\\","sources":["database.js"],"sourcesContent":["import mysql from \"promise-mysql\";\r\nimport { claves } from \"./../config\";\r\n\r\nconst connection = mysql.createConnection({\r\n    host: claves.host,\r\n    database: claves.database,\r\n    user: claves.user,\r\n    password: claves.password\r\n});\r\n\r\nconst getConnection = () => {\r\n    return connection;\r\n}\r\n\r\nmodule.exports = {\r\n    getConnection\r\n}\r\n"],"mappings":";;AAAA,IAAAA,aAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAAqC,SAAAD,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAErC,MAAMG,UAAU,GAAGC,qBAAK,CAACC,gBAAgB,CAAC;EACtCC,IAAI,EAAEC,cAAM,CAACD,IAAI;EACjBE,QAAQ,EAAED,cAAM,CAACC,QAAQ;EACzBC,IAAI,EAAEF,cAAM,CAACE,IAAI;EACjBC,QAAQ,EAAEH,cAAM,CAACG;AACrB,CAAC,CAAC;AAEF,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACxB,OAAOR,UAAU;AACrB,CAAC;AAEDS,MAAM,CAACC,OAAO,GAAG;EACbF;AACJ,CAAC","ignoreList":[]}},"mtime":1713191435218},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\config.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.claves = void 0;\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n_dotenv.default.config();\nconst claves = exports.claves = {\n  host: process.env.HOST || \"\",\n  database: process.env.DATABASE || \"\",\n  user: process.env.USER || \"\",\n  password: process.env.PASSWORD || \"\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZG90ZW52IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImRvdGVudiIsImNvbmZpZyIsImNsYXZlcyIsImV4cG9ydHMiLCJob3N0IiwicHJvY2VzcyIsImVudiIsIkhPU1QiLCJkYXRhYmFzZSIsIkRBVEFCQVNFIiwidXNlciIsIlVTRVIiLCJwYXNzd29yZCIsIlBBU1NXT1JEIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHBhdHJpXFxPbmVEcml2ZVxcRG9jdW1lbnRvc1xcR2l0SHViXFxQb3J0YWZvbGlvLXRpdHVsb1xcQVBJICsgQkJERFxcQVBJIHJlY2V0YXNcXHNyY1xcIiwic291cmNlcyI6WyJjb25maWcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRvdGVudiBmcm9tIFwiZG90ZW52XCI7XHJcbmRvdGVudi5jb25maWcoKTtcclxuXHJcbmV4cG9ydCBjb25zdCBjbGF2ZXMgPXtcclxuICAgIGhvc3Q6IHByb2Nlc3MuZW52LkhPU1QgfHwgXCJcIixcclxuICAgIGRhdGFiYXNlOiBwcm9jZXNzLmVudi5EQVRBQkFTRSB8fCBcIlwiLFxyXG4gICAgdXNlcjogcHJvY2Vzcy5lbnYuVVNFUiB8fCBcIlwiLFxyXG4gICAgcGFzc3dvcmQ6IHByb2Nlc3MuZW52LlBBU1NXT1JEIHx8IFwiXCJcclxufVxyXG5cclxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxPQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFBNEIsU0FBQUQsdUJBQUFFLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxLQUFBRSxPQUFBLEVBQUFGLEdBQUE7QUFDNUJHLGVBQU0sQ0FBQ0MsTUFBTSxDQUFDLENBQUM7QUFFUixNQUFNQyxNQUFNLEdBQUFDLE9BQUEsQ0FBQUQsTUFBQSxHQUFFO0VBQ2pCRSxJQUFJLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxJQUFJLElBQUksRUFBRTtFQUM1QkMsUUFBUSxFQUFFSCxPQUFPLENBQUNDLEdBQUcsQ0FBQ0csUUFBUSxJQUFJLEVBQUU7RUFDcENDLElBQUksRUFBRUwsT0FBTyxDQUFDQyxHQUFHLENBQUNLLElBQUksSUFBSSxFQUFFO0VBQzVCQyxRQUFRLEVBQUVQLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDTyxRQUFRLElBQUk7QUFDdEMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["_dotenv","_interopRequireDefault","require","obj","__esModule","default","dotenv","config","claves","exports","host","process","env","HOST","database","DATABASE","user","USER","password","PASSWORD"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\","sources":["config.js"],"sourcesContent":["import dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nexport const claves ={\r\n    host: process.env.HOST || \"\",\r\n    database: process.env.DATABASE || \"\",\r\n    user: process.env.USER || \"\",\r\n    password: process.env.PASSWORD || \"\"\r\n}\r\n\r\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA4B,SAAAD,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAC5BG,eAAM,CAACC,MAAM,CAAC,CAAC;AAER,MAAMC,MAAM,GAAAC,OAAA,CAAAD,MAAA,GAAE;EACjBE,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI,EAAE;EAC5BC,QAAQ,EAAEH,OAAO,CAACC,GAAG,CAACG,QAAQ,IAAI,EAAE;EACpCC,IAAI,EAAEL,OAAO,CAACC,GAAG,CAACK,IAAI,IAAI,EAAE;EAC5BC,QAAQ,EAAEP,OAAO,CAACC,GAAG,CAACO,QAAQ,IAAI;AACtC,CAAC","ignoreList":[]}},"mtime":1713130047121},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\controllers\\\\recetas.controller.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.methods = void 0;\nvar _database = require(\"./../database/database\");\n// PARA OBTENER LOS RESULTADOS\nconst getRecetas = async (req, res) => {\n  try {\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n        recetas_del_mundo.id_receta, \n        recetas_del_mundo.nombre_receta, \n        recetas_del_mundo.ingrediente_receta, \n        recetas_del_mundo.Año, \n        recetas_del_mundo.pais_receta, \n        recetas_del_mundo.preparacion_receta, \n        recetas_del_mundo.fecha_creacion, \n        recetas_del_mundo.url_imagen_receta, \n        recetas_del_mundo.categoria,\n        usuarios.nombres as \"creado_por\" \n        FROM recetas_del_mundo\n        INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user;`);\n\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      console.log(\"No hay más resultados disponibles.\");\n      return res.status(404).json({\n        message: \"No hay más resultados disponibles.\"\n      });\n    }\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENER LOS RESULTADOS\nconst getPaises = async (req, res) => {\n  try {\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT DISTINCT pais_receta FROM recetas_del_mundo;`);\n\n    // Verificar si hay resultados\n    // if (result.length === 0) {\n    //     console.log(\"No hay más resultados disponibles.\");\n    //     return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\n    // }\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENER LOS RESULTADOS\nconst getCategorias = async (req, res) => {\n  try {\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT DISTINCT categoria FROM recetas_del_mundo;`);\n\n    // Verificar si hay resultados\n    // if (result.length === 0) {\n    //     console.log(\"No hay más resultados disponibles.\");\n    //     return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\n    // }\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENERLOS POR id\nconst getReceta = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.categoria,\n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.id_receta=?`, id);\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA AÑADIR ELEMENTOS\nconst addReceta = async (req, res) => {\n  try {\n    const {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      preparacion_receta,\n      categoria,\n      id_user\n    } = req.body;\n\n    // if (nombre_receta == undefined || ingrediente_receta == undefined) {\n    //     return res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\n    // }\n\n    const receta = {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      preparacion_receta,\n      categoria,\n      id_user\n    };\n    const connection = await (0, _database.getConnection)();\n    await connection.query(\"INSERT INTO recetas_del_mundo SET ?\", receta);\n    res.json({\n      message: \"Receta añadida exitosamente\"\n    });\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA ELIMINAR ELEMENTOS\nconst deleteReceta = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"DELETE FROM recetas_del_mundo WHERE id_receta = ?;\", id);\n    if (result.affectedRows > 0) {\n      // Elemento borrado exitosamente\n      res.json({\n        message: `Elemento con ID ${id} borrado exitosamente.`\n      });\n    } else {\n      // No se encontró ningún elemento con el ID proporcionado\n      res.status(404).json({\n        message: `No se encontró ningún elemento con el ID ${id}.`\n      });\n    }\n  } catch (error) {\n    // Error en la solicitud\n    res.status(500).send(error.message);\n  }\n};\n\n// PARA ACTUALIZAR ELEMENTOS\nconst updateReceta = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      categoria,\n      preparacion_receta,\n      id_user\n    } = req.body;\n    if (nombre_receta == undefined || ingrediente_receta == undefined) {\n      return res.status(400).json({\n        message: \"Bad Request, Por favor, completar los datos.\"\n      });\n    }\n    const receta = {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      categoria,\n      preparacion_receta,\n      id_user\n    };\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"UPDATE recetas_del_mundo SET ? WHERE id_receta = ?;\", [receta, id]);\n\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// ============================DESGLOSE POR PAISES ========================================\n// LISTADO:\n// Chile || Estados Unidos || Gran Bretaña || Canada || España || Mexico || Argentina\n\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaCL = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='chile';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENERLOS POR pais = Estados Unidos\nconst getRecetaUSA = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta = 'Estados Unidos';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = Gran Bretaña\nconst getRecetaGB = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Gran Bretaña';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaCA = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Canada';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaES = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='españa';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaMX = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Mexico';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getReceta_ARG = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Argentina';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// =====================================================================\n// GESTION DE CATEGORIAS COMO POSTRES, ETC\n// =====================================================================\n\n// seleccionar postres\nconst getPostres = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            recetas_del_mundo.categoria, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.categoria='postres';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// seleccionar desayunos\nconst getDesayuno = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            recetas_del_mundo.categoria, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.categoria='desayuno';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\nconst methods = exports.methods = {\n  // GET \n  getRecetas,\n  getReceta,\n  getRecetaCL,\n  getRecetaUSA,\n  getRecetaGB,\n  getRecetaCA,\n  getRecetaES,\n  getRecetaMX,\n  getReceta_ARG,\n  getPaises,\n  // CATEGORIAS\n  getCategorias,\n  getPostres,\n  getDesayuno,\n  // POST\n  addReceta,\n  // PUT\n  updateReceta,\n  // DELETE\n  deleteReceta\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_database","require","getRecetas","req","res","connection","getConnection","result","query","length","console","log","status","json","message","error","send","getPaises","getCategorias","getReceta","id","params","addReceta","nombre_receta","ingrediente_receta","pais_receta","preparacion_receta","categoria","id_user","body","receta","deleteReceta","affectedRows","updateReceta","undefined","getRecetaCL","getRecetaUSA","getRecetaGB","getRecetaCA","getRecetaES","getRecetaMX","getReceta_ARG","getPostres","getDesayuno","methods","exports"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\controllers\\","sources":["recetas.controller.js"],"sourcesContent":["import { getConnection } from \"./../database/database\"\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getRecetas = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n        `SELECT  \r\n        recetas_del_mundo.id_receta, \r\n        recetas_del_mundo.nombre_receta, \r\n        recetas_del_mundo.ingrediente_receta, \r\n        recetas_del_mundo.Año, \r\n        recetas_del_mundo.pais_receta, \r\n        recetas_del_mundo.preparacion_receta, \r\n        recetas_del_mundo.fecha_creacion, \r\n        recetas_del_mundo.url_imagen_receta, \r\n        recetas_del_mundo.categoria,\r\n        usuarios.nombres as \"creado_por\" \r\n        FROM recetas_del_mundo\r\n        INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user;`);\r\n        \r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            console.log(\"No hay más resultados disponibles.\");\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getPaises = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n        `SELECT DISTINCT pais_receta FROM recetas_del_mundo;`);\r\n        \r\n        // Verificar si hay resultados\r\n        // if (result.length === 0) {\r\n        //     console.log(\"No hay más resultados disponibles.\");\r\n        //     return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        // }\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getCategorias = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n        `SELECT DISTINCT categoria FROM recetas_del_mundo;`);\r\n        \r\n        // Verificar si hay resultados\r\n        // if (result.length === 0) {\r\n        //     console.log(\"No hay más resultados disponibles.\");\r\n        //     return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        // }\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENERLOS POR id\r\nconst getReceta = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.categoria,\r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.id_receta=?`, id);\r\n        // console.log(result);\r\n         // Verificar si hay resultados\r\n         if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n\r\n// PARA AÑADIR ELEMENTOS\r\nconst addReceta = async (req, res) => {\r\n\r\n    try {\r\n        const {nombre_receta, ingrediente_receta, pais_receta, preparacion_receta, categoria, id_user} = req.body;\r\n\r\n        // if (nombre_receta == undefined || ingrediente_receta == undefined) {\r\n        //     return res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\r\n        // }\r\n\r\n        const receta = {\r\n            nombre_receta, ingrediente_receta, pais_receta, preparacion_receta, categoria, id_user\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        await connection.query(\"INSERT INTO recetas_del_mundo SET ?\", receta);\r\n        res.json({ message: \"Receta añadida exitosamente\" })\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA ELIMINAR ELEMENTOS\r\nconst deleteReceta = async (req, res) => {\r\n    try {\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"DELETE FROM recetas_del_mundo WHERE id_receta = ?;\", id);\r\n\r\n        if (result.affectedRows > 0) {\r\n            // Elemento borrado exitosamente\r\n            res.json({ message: `Elemento con ID ${id} borrado exitosamente.` });\r\n        } else {\r\n            // No se encontró ningún elemento con el ID proporcionado\r\n            res.status(404).json({ message: `No se encontró ningún elemento con el ID ${id}.` });\r\n        }\r\n    } catch (error) {\r\n        // Error en la solicitud\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n// PARA ACTUALIZAR ELEMENTOS\r\nconst updateReceta = async (req, res) => {\r\n\r\n    try {\r\n        const { id } = req.params;\r\n        const { nombre_receta, ingrediente_receta, pais_receta, categoria, preparacion_receta, id_user } = req.body;\r\n        if (nombre_receta == undefined || ingrediente_receta == undefined) {\r\n            return res.status(400).json({ message: \"Bad Request, Por favor, completar los datos.\" })\r\n        }\r\n        const receta = {\r\n            nombre_receta, ingrediente_receta, pais_receta, categoria, preparacion_receta, id_user\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"UPDATE recetas_del_mundo SET ? WHERE id_receta = ?;\",[receta,id]);\r\n        \r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// ============================DESGLOSE POR PAISES ========================================\r\n// LISTADO:\r\n// Chile || Estados Unidos || Gran Bretaña || Canada || España || Mexico || Argentina\r\n    \r\n\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaCL = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='chile';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENERLOS POR pais = Estados Unidos\r\nconst getRecetaUSA = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta = 'Estados Unidos';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = Gran Bretaña\r\nconst getRecetaGB = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Gran Bretaña';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaCA = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Canada';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaES = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='españa';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaMX = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Mexico';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getReceta_ARG = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Argentina';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// =====================================================================\r\n                        // GESTION DE CATEGORIAS COMO POSTRES, ETC\r\n// =====================================================================\r\n\r\n// seleccionar postres\r\nconst getPostres = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            recetas_del_mundo.categoria, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.categoria='postres';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// seleccionar desayunos\r\nconst getDesayuno = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            recetas_del_mundo.categoria, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.categoria='desayuno';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\nexport const methods = {\r\n    // GET \r\n    getRecetas, getReceta, getRecetaCL, getRecetaUSA, getRecetaGB, getRecetaCA, getRecetaES, getRecetaMX, getReceta_ARG, getPaises,\r\n    // CATEGORIAS\r\n     getCategorias, getPostres, getDesayuno,\r\n    // POST\r\n    addReceta,\r\n    // PUT\r\n    updateReceta,\r\n    // DELETE\r\n    deleteReceta,\r\n};\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1713193410712},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\controllers\\\\user.controller.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.usermethods = void 0;\nvar _database = require(\"./../database/database\");\n// =======================================================================\n//    ===================== GESTIÓN DE USUARIOS ========================\n// =======================================================================\nconst getUser = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"SELECT id_user,nombres,user,fecha_creacion FROM usuarios\");\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\nconst ejemploUserPaginado = async (req, res) => {\n  try {\n    const {\n      page\n    } = req.query; // Obtener el número de página de la consulta\n    const itemsPerPage = 10; // Número de resultados por página\n\n    // Calcular el offset basado en la página actual\n    const offset = (page - 1) * itemsPerPage;\n    const connection = await (0, _database.getConnection)();\n\n    // Consulta SQL con LIMIT y OFFSET para la paginación\n    const result = await connection.query(`SELECT id_user, nombres, user, fecha_creacion FROM usuarios LIMIT ${itemsPerPage} OFFSET ${offset}`);\n\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"No hay más resultados disponibles.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500).send(error.message);\n  }\n};\n\n// PARA AÑADIR USUARIOS\nconst addUsuario = async (req, res) => {\n  try {\n    const {\n      nombres,\n      user,\n      password,\n      fecha_creacion\n    } = req.body;\n    // console.log(banda)\n    // console.log(disco)\n    if (nombres == undefined || user == undefined) {\n      res.status(400).json({\n        message: \"Bad Request, Por favor, completa los datos.\"\n      });\n    }\n    const usuarionuevo = {\n      nombres,\n      user,\n      password,\n      fecha_creacion\n    };\n    const connection = await (0, _database.getConnection)();\n    await connection.query(\"INSERT INTO usuarios SET ?\", usuarionuevo);\n    res.json({\n      message: `Usuario ${user} añadido exitosamente`\n    });\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA ACTUALIZAR USUARIOS\nconst updateUsuario = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const {\n      nombres,\n      user,\n      password\n    } = req.body;\n    if (user === undefined) {\n      return res.status(400).json({\n        message: \"Bad Request, Por favor, completar los datos.\"\n      });\n    }\n    const usuarioupdate = {\n      nombres,\n      user,\n      password\n    };\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"UPDATE usuarios SET ? WHERE id_user = ?;\", [usuarioupdate, id]);\n    res.json({\n      message: `Usuario ${user} Editado exitosamente`\n    });\n    // console.log(result);\n    // res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA ELIMINAR ELEMENTOS\nconst deleteUsuario = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"DELETE FROM usuarios WHERE id_user = ?;\", id);\n    if (result.affectedRows > 0) {\n      // Elemento borrado exitosamente\n      res.json({\n        message: `Usuario con ID ${id} borrado exitosamente.`\n      });\n    } else {\n      // No se encontró ningún elemento con el ID proporcionado\n      res.status(404).json({\n        message: `No se encontró ningún usuario con el ID ${id}.`\n      });\n    }\n  } catch (error) {\n    // Error en la solicitud\n    res.status(500).send(error.message);\n  }\n};\nconst usermethods = exports.usermethods = {\n  // gestión usuarios\n  getUser,\n  ejemploUserPaginado,\n  addUsuario,\n  updateUsuario,\n  deleteUsuario\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_database","require","getUser","req","res","id","params","connection","getConnection","result","query","json","error","status","send","message","ejemploUserPaginado","page","itemsPerPage","offset","length","addUsuario","nombres","user","password","fecha_creacion","body","undefined","usuarionuevo","updateUsuario","usuarioupdate","deleteUsuario","affectedRows","usermethods","exports"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\controllers\\","sources":["user.controller.js"],"sourcesContent":["import { getConnection } from \"./../database/database\"\r\n\r\n// =======================================================================\r\n//    ===================== GESTIÓN DE USUARIOS ========================\r\n// =======================================================================\r\nconst getUser = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"SELECT id_user,nombres,user,fecha_creacion FROM usuarios\");\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\nconst ejemploUserPaginado = async (req, res) => {\r\n    try {\r\n        const { page } = req.query; // Obtener el número de página de la consulta\r\n        const itemsPerPage = 10; // Número de resultados por página\r\n\r\n        // Calcular el offset basado en la página actual\r\n        const offset = (page - 1) * itemsPerPage;\r\n\r\n        const connection = await getConnection();\r\n\r\n        // Consulta SQL con LIMIT y OFFSET para la paginación\r\n        const result = await connection.query(\r\n            `SELECT id_user, nombres, user, fecha_creacion FROM usuarios LIMIT ${itemsPerPage} OFFSET ${offset}`\r\n        );\r\n\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA AÑADIR USUARIOS\r\nconst addUsuario = async (req, res) => {\r\n\r\n    try {\r\n        const { nombres, user, password, fecha_creacion } = req.body;\r\n        // console.log(banda)\r\n        // console.log(disco)\r\n        if (nombres == undefined || user == undefined) {\r\n            res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\r\n        }\r\n        const usuarionuevo = {\r\n            nombres, user, password, fecha_creacion\r\n        }\r\n        const connection = await getConnection();\r\n        await connection.query(\"INSERT INTO usuarios SET ?\", usuarionuevo);\r\n        res.json({ message: `Usuario ${user} añadido exitosamente`})\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA ACTUALIZAR USUARIOS\r\nconst updateUsuario = async (req, res) => {\r\n\r\n    try {\r\n        const { id } = req.params;\r\n        const { nombres, user, password, } = req.body;\r\n        if (user === undefined) {\r\n            return res.status(400).json({ message: \"Bad Request, Por favor, completar los datos.\" })\r\n        }\r\n        const usuarioupdate = {\r\n            nombres, user, password,\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"UPDATE usuarios SET ? WHERE id_user = ?;\",[usuarioupdate,id]);\r\n        res.json( { message: `Usuario ${user} Editado exitosamente`})\r\n        // console.log(result);\r\n        // res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA ELIMINAR ELEMENTOS\r\nconst deleteUsuario = async (req, res) => {\r\n    try {\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"DELETE FROM usuarios WHERE id_user = ?;\", id);\r\n\r\n        if (result.affectedRows > 0) {\r\n            // Elemento borrado exitosamente\r\n            res.json({ message: `Usuario con ID ${id} borrado exitosamente.` });\r\n        } else {\r\n            // No se encontró ningún elemento con el ID proporcionado\r\n            res.status(404).json({ message: `No se encontró ningún usuario con el ID ${id}.` });\r\n        }\r\n    } catch (error) {\r\n        // Error en la solicitud\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n\r\nexport const usermethods = {\r\n    // gestión usuarios\r\n    getUser, ejemploUserPaginado, addUsuario, updateUsuario, deleteUsuario,\r\n    \r\n};"],"mappings":"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","ignoreList":[]}},"mtime":1713193498029},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\controllers\\\\recetas.controller.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.methods = void 0;\nvar _database = require(\"./../database/database\");\n// PARA OBTENER LOS RESULTADOS\nconst getRecetas = async (req, res) => {\n  try {\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n        recetas_del_mundo.id_receta, \n        recetas_del_mundo.nombre_receta, \n        recetas_del_mundo.ingrediente_receta, \n        recetas_del_mundo.Año, \n        recetas_del_mundo.pais_receta, \n        recetas_del_mundo.preparacion_receta, \n        recetas_del_mundo.fecha_creacion, \n        recetas_del_mundo.url_imagen_receta, \n        recetas_del_mundo.categoria,\n        usuarios.nombres as \"creado_por\" \n        FROM recetas_del_mundo\n        INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user;`);\n\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      console.log(\"No hay más resultados disponibles.\");\n      return res.status(404).json({\n        message: \"No hay más resultados disponibles.\"\n      });\n    }\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENER LOS RESULTADOS\nconst getPaises = async (req, res) => {\n  try {\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT DISTINCT pais_receta FROM recetas_del_mundo;`);\n\n    // Verificar si hay resultados\n    // if (result.length === 0) {\n    //     console.log(\"No hay más resultados disponibles.\");\n    //     return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\n    // }\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENER LOS RESULTADOS\nconst getCategorias = async (req, res) => {\n  try {\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT DISTINCT categoria FROM recetas_del_mundo;`);\n\n    // Verificar si hay resultados\n    // if (result.length === 0) {\n    //     console.log(\"No hay más resultados disponibles.\");\n    //     return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\n    // }\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENERLOS POR id\nconst getReceta = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.categoria,\n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.id_receta=?`, id);\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA AÑADIR ELEMENTOS\nconst addReceta = async (req, res) => {\n  try {\n    const {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      preparacion_receta,\n      categoria,\n      id_user\n    } = req.body;\n\n    // if (nombre_receta == undefined || ingrediente_receta == undefined) {\n    //     return res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\n    // }\n\n    const receta = {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      preparacion_receta,\n      categoria,\n      id_user\n    };\n    const connection = await (0, _database.getConnection)();\n    await connection.query(\"INSERT INTO recetas_del_mundo SET ?\", receta);\n    res.json({\n      message: \"Receta añadida exitosamente\"\n    });\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA ELIMINAR ELEMENTOS\nconst deleteReceta = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"DELETE FROM recetas_del_mundo WHERE id_receta = ?;\", id);\n    if (result.affectedRows > 0) {\n      // Elemento borrado exitosamente\n      res.json({\n        message: `Elemento con ID ${id} borrado exitosamente.`\n      });\n    } else {\n      // No se encontró ningún elemento con el ID proporcionado\n      res.status(404).json({\n        message: `No se encontró ningún elemento con el ID ${id}.`\n      });\n    }\n  } catch (error) {\n    // Error en la solicitud\n    res.status(500).send(error.message);\n  }\n};\n\n// PARA ACTUALIZAR ELEMENTOS\nconst updateReceta = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      categoria,\n      preparacion_receta,\n      id_user\n    } = req.body;\n    if (nombre_receta == undefined || ingrediente_receta == undefined) {\n      return res.status(400).json({\n        message: \"Bad Request, Por favor, completar los datos.\"\n      });\n    }\n    const receta = {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      categoria,\n      preparacion_receta,\n      id_user\n    };\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"UPDATE recetas_del_mundo SET ? WHERE id_receta = ?;\", [receta, id]);\n\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// ============================DESGLOSE POR PAISES ========================================\n// LISTADO:\n// Chile || Estados Unidos || Gran Bretaña || Canada || España || Mexico || Argentina\n\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaCL = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='chile';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENERLOS POR pais = Estados Unidos\nconst getRecetaUSA = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta = 'Estados Unidos';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = Gran Bretaña\nconst getRecetaGB = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Gran Bretaña';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaCA = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Canada';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaES = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='españa';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaMX = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Mexico';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getReceta_ARG = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Argentina';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// =====================================================================\n// GESTION DE CATEGORIAS COMO POSTRES, ETC\n// =====================================================================\n\n// seleccionar postres\nconst getPostres = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            recetas_del_mundo.categoria, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.categoria='postres';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// seleccionar desayunos\nconst getDesayuno = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            recetas_del_mundo.categoria, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.categoria='desayuno';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\nconst methods = exports.methods = {\n  // GET \n  getRecetas,\n  getReceta,\n  getRecetaCL,\n  getRecetaUSA,\n  getRecetaGB,\n  getRecetaCA,\n  getRecetaES,\n  getRecetaMX,\n  getReceta_ARG,\n  getPaises,\n  // CATEGORIAS\n  getCategorias,\n  getPostres,\n  getDesayuno,\n  // POST\n  addReceta,\n  // PUT\n  updateReceta,\n  // DELETE\n  deleteReceta\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_database","require","getRecetas","req","res","connection","getConnection","result","query","length","console","log","status","json","message","error","send","getPaises","getCategorias","getReceta","id","params","addReceta","nombre_receta","ingrediente_receta","pais_receta","preparacion_receta","categoria","id_user","body","receta","deleteReceta","affectedRows","updateReceta","undefined","getRecetaCL","getRecetaUSA","getRecetaGB","getRecetaCA","getRecetaES","getRecetaMX","getReceta_ARG","getPostres","getDesayuno","methods","exports"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\controllers\\","sources":["recetas.controller.js"],"sourcesContent":["import { getConnection } from \"./../database/database\"\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getRecetas = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n        `SELECT  \r\n        recetas_del_mundo.id_receta, \r\n        recetas_del_mundo.nombre_receta, \r\n        recetas_del_mundo.ingrediente_receta, \r\n        recetas_del_mundo.Año, \r\n        recetas_del_mundo.pais_receta, \r\n        recetas_del_mundo.preparacion_receta, \r\n        recetas_del_mundo.fecha_creacion, \r\n        recetas_del_mundo.url_imagen_receta, \r\n        recetas_del_mundo.categoria,\r\n        usuarios.nombres as \"creado_por\" \r\n        FROM recetas_del_mundo\r\n        INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user;`);\r\n        \r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            console.log(\"No hay más resultados disponibles.\");\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getPaises = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n        `SELECT DISTINCT pais_receta FROM recetas_del_mundo;`);\r\n        \r\n        // Verificar si hay resultados\r\n        // if (result.length === 0) {\r\n        //     console.log(\"No hay más resultados disponibles.\");\r\n        //     return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        // }\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getCategorias = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n        `SELECT DISTINCT categoria FROM recetas_del_mundo;`);\r\n        \r\n        // Verificar si hay resultados\r\n        // if (result.length === 0) {\r\n        //     console.log(\"No hay más resultados disponibles.\");\r\n        //     return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        // }\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENERLOS POR id\r\nconst getReceta = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.categoria,\r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.id_receta=?`, id);\r\n        // console.log(result);\r\n         // Verificar si hay resultados\r\n         if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n\r\n// PARA AÑADIR ELEMENTOS\r\nconst addReceta = async (req, res) => {\r\n\r\n    try {\r\n        const {nombre_receta, ingrediente_receta, pais_receta, preparacion_receta, categoria, id_user} = req.body;\r\n\r\n        // if (nombre_receta == undefined || ingrediente_receta == undefined) {\r\n        //     return res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\r\n        // }\r\n\r\n        const receta = {\r\n            nombre_receta, ingrediente_receta, pais_receta, preparacion_receta, categoria, id_user\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        await connection.query(\"INSERT INTO recetas_del_mundo SET ?\", receta);\r\n        res.json({ message: \"Receta añadida exitosamente\" })\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA ELIMINAR ELEMENTOS\r\nconst deleteReceta = async (req, res) => {\r\n    try {\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"DELETE FROM recetas_del_mundo WHERE id_receta = ?;\", id);\r\n\r\n        if (result.affectedRows > 0) {\r\n            // Elemento borrado exitosamente\r\n            res.json({ message: `Elemento con ID ${id} borrado exitosamente.` });\r\n        } else {\r\n            // No se encontró ningún elemento con el ID proporcionado\r\n            res.status(404).json({ message: `No se encontró ningún elemento con el ID ${id}.` });\r\n        }\r\n    } catch (error) {\r\n        // Error en la solicitud\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n// PARA ACTUALIZAR ELEMENTOS\r\nconst updateReceta = async (req, res) => {\r\n\r\n    try {\r\n        const { id } = req.params;\r\n        const { nombre_receta, ingrediente_receta, pais_receta, categoria, preparacion_receta, id_user } = req.body;\r\n        if (nombre_receta == undefined || ingrediente_receta == undefined) {\r\n            return res.status(400).json({ message: \"Bad Request, Por favor, completar los datos.\" })\r\n        }\r\n        const receta = {\r\n            nombre_receta, ingrediente_receta, pais_receta, categoria, preparacion_receta, id_user\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"UPDATE recetas_del_mundo SET ? WHERE id_receta = ?;\",[receta,id]);\r\n        \r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// ============================DESGLOSE POR PAISES ========================================\r\n// LISTADO:\r\n// Chile || Estados Unidos || Gran Bretaña || Canada || España || Mexico || Argentina\r\n    \r\n\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaCL = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='chile';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENERLOS POR pais = Estados Unidos\r\nconst getRecetaUSA = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta = 'Estados Unidos';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = Gran Bretaña\r\nconst getRecetaGB = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Gran Bretaña';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaCA = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Canada';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaES = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='españa';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaMX = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Mexico';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getReceta_ARG = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Argentina';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// =====================================================================\r\n                        // GESTION DE CATEGORIAS COMO POSTRES, ETC\r\n// =====================================================================\r\n\r\n// seleccionar postres\r\nconst getPostres = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            recetas_del_mundo.categoria, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.categoria='postres';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// seleccionar desayunos\r\nconst getDesayuno = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            recetas_del_mundo.categoria, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.categoria='desayuno';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\nexport const methods = {\r\n    // GET \r\n    getRecetas, getReceta, getRecetaCL, getRecetaUSA, getRecetaGB, getRecetaCA, getRecetaES, getRecetaMX, getReceta_ARG, getPaises,\r\n    // CATEGORIAS\r\n     getCategorias, getPostres, getDesayuno,\r\n    // POST\r\n    addReceta,\r\n    // PUT\r\n    updateReceta,\r\n    // DELETE\r\n    deleteReceta,\r\n};\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1713193410712},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\controllers\\\\user.controller.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.usermethods = void 0;\nvar _database = require(\"./../database/database\");\n// =======================================================================\n//    ===================== GESTIÓN DE USUARIOS ========================\n// =======================================================================\nconst getUser = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"SELECT id_user,nombres,user,fecha_creacion FROM usuarios\");\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\nconst ejemploUserPaginado = async (req, res) => {\n  try {\n    const {\n      page\n    } = req.query; // Obtener el número de página de la consulta\n    const itemsPerPage = 10; // Número de resultados por página\n\n    // Calcular el offset basado en la página actual\n    const offset = (page - 1) * itemsPerPage;\n    const connection = await (0, _database.getConnection)();\n\n    // Consulta SQL con LIMIT y OFFSET para la paginación\n    const result = await connection.query(`SELECT id_user, nombres, user, fecha_creacion FROM usuarios LIMIT ${itemsPerPage} OFFSET ${offset}`);\n\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"No hay más resultados disponibles.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500).send(error.message);\n  }\n};\n\n// PARA AÑADIR USUARIOS\nconst addUsuario = async (req, res) => {\n  try {\n    const {\n      nombres,\n      user,\n      password,\n      fecha_creacion\n    } = req.body;\n    // console.log(banda)\n    // console.log(disco)\n    if (nombres == undefined || user == undefined) {\n      res.status(400).json({\n        message: \"Bad Request, Por favor, completa los datos.\"\n      });\n    }\n    const usuarionuevo = {\n      nombres,\n      user,\n      password,\n      fecha_creacion\n    };\n    const connection = await (0, _database.getConnection)();\n    await connection.query(\"INSERT INTO usuarios SET ?\", usuarionuevo);\n    res.json({\n      message: `Usuario ${user} añadido exitosamente`\n    });\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA ACTUALIZAR USUARIOS\nconst updateUsuario = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const {\n      nombres,\n      user,\n      password\n    } = req.body;\n    if (user === undefined) {\n      return res.status(400).json({\n        message: \"Bad Request, Por favor, completar los datos.\"\n      });\n    }\n    const usuarioupdate = {\n      nombres,\n      user,\n      password\n    };\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"UPDATE usuarios SET ? WHERE id_user = ?;\", [usuarioupdate, id]);\n    res.json({\n      message: `Usuario ${user} Editado exitosamente`\n    });\n    // console.log(result);\n    // res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA ELIMINAR ELEMENTOS\nconst deleteUsuario = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"DELETE FROM usuarios WHERE id_user = ?;\", id);\n    if (result.affectedRows > 0) {\n      // Elemento borrado exitosamente\n      res.json({\n        message: `Usuario con ID ${id} borrado exitosamente.`\n      });\n    } else {\n      // No se encontró ningún elemento con el ID proporcionado\n      res.status(404).json({\n        message: `No se encontró ningún usuario con el ID ${id}.`\n      });\n    }\n  } catch (error) {\n    // Error en la solicitud\n    res.status(500).send(error.message);\n  }\n};\nconst usermethods = exports.usermethods = {\n  // gestión usuarios\n  getUser,\n  ejemploUserPaginado,\n  addUsuario,\n  updateUsuario,\n  deleteUsuario\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_database","require","getUser","req","res","id","params","connection","getConnection","result","query","json","error","status","send","message","ejemploUserPaginado","page","itemsPerPage","offset","length","addUsuario","nombres","user","password","fecha_creacion","body","undefined","usuarionuevo","updateUsuario","usuarioupdate","deleteUsuario","affectedRows","usermethods","exports"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\controllers\\","sources":["user.controller.js"],"sourcesContent":["import { getConnection } from \"./../database/database\"\r\n\r\n// =======================================================================\r\n//    ===================== GESTIÓN DE USUARIOS ========================\r\n// =======================================================================\r\nconst getUser = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"SELECT id_user,nombres,user,fecha_creacion FROM usuarios\");\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\nconst ejemploUserPaginado = async (req, res) => {\r\n    try {\r\n        const { page } = req.query; // Obtener el número de página de la consulta\r\n        const itemsPerPage = 10; // Número de resultados por página\r\n\r\n        // Calcular el offset basado en la página actual\r\n        const offset = (page - 1) * itemsPerPage;\r\n\r\n        const connection = await getConnection();\r\n\r\n        // Consulta SQL con LIMIT y OFFSET para la paginación\r\n        const result = await connection.query(\r\n            `SELECT id_user, nombres, user, fecha_creacion FROM usuarios LIMIT ${itemsPerPage} OFFSET ${offset}`\r\n        );\r\n\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA AÑADIR USUARIOS\r\nconst addUsuario = async (req, res) => {\r\n\r\n    try {\r\n        const { nombres, user, password, fecha_creacion } = req.body;\r\n        // console.log(banda)\r\n        // console.log(disco)\r\n        if (nombres == undefined || user == undefined) {\r\n            res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\r\n        }\r\n        const usuarionuevo = {\r\n            nombres, user, password, fecha_creacion\r\n        }\r\n        const connection = await getConnection();\r\n        await connection.query(\"INSERT INTO usuarios SET ?\", usuarionuevo);\r\n        res.json({ message: `Usuario ${user} añadido exitosamente`})\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA ACTUALIZAR USUARIOS\r\nconst updateUsuario = async (req, res) => {\r\n\r\n    try {\r\n        const { id } = req.params;\r\n        const { nombres, user, password, } = req.body;\r\n        if (user === undefined) {\r\n            return res.status(400).json({ message: \"Bad Request, Por favor, completar los datos.\" })\r\n        }\r\n        const usuarioupdate = {\r\n            nombres, user, password,\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"UPDATE usuarios SET ? WHERE id_user = ?;\",[usuarioupdate,id]);\r\n        res.json( { message: `Usuario ${user} Editado exitosamente`})\r\n        // console.log(result);\r\n        // res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA ELIMINAR ELEMENTOS\r\nconst deleteUsuario = async (req, res) => {\r\n    try {\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"DELETE FROM usuarios WHERE id_user = ?;\", id);\r\n\r\n        if (result.affectedRows > 0) {\r\n            // Elemento borrado exitosamente\r\n            res.json({ message: `Usuario con ID ${id} borrado exitosamente.` });\r\n        } else {\r\n            // No se encontró ningún elemento con el ID proporcionado\r\n            res.status(404).json({ message: `No se encontró ningún usuario con el ID ${id}.` });\r\n        }\r\n    } catch (error) {\r\n        // Error en la solicitud\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n\r\nexport const usermethods = {\r\n    // gestión usuarios\r\n    getUser, ejemploUserPaginado, addUsuario, updateUsuario, deleteUsuario,\r\n    \r\n};"],"mappings":"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","ignoreList":[]}},"mtime":1713193498029}}